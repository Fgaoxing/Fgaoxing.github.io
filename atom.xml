<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fgaoxing</title>
  
  <subtitle>Fgaoxing的个人博客</subtitle>
  <link href="https://www.yt-blog.top/atom.xml" rel="self"/>
  
  <link href="https://www.yt-blog.top/"/>
  <updated>2024-03-09T14:18:38.480Z</updated>
  <id>https://www.yt-blog.top/</id>
  
  <author>
    <name>Fgaoxing</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>全平台账号公示</title>
    <link href="https://www.yt-blog.top/62238/"/>
    <id>https://www.yt-blog.top/62238/</id>
    <published>2024-03-09T13:09:19.916Z</published>
    <updated>2024-03-09T14:18:38.480Z</updated>
    
    <content type="html"><![CDATA[<p>这里是本人账户的链接</p><p><a href="https://github.com/Fgaoxing">Fgaoxing (github.com)</a></p><p><a href="https://gitee.com/Fgaoxing">Fgaoxing (Fgaoxing) - Gitee.com</a></p><p><a href="https://blog.csdn.net/m0_64276521">Fgaoxing-CSDN博客</a></p><p><a href="https://www.cnblogs.com/fgaoxing">Fgaoxing - 博客园 (cnblogs.com)</a></p>]]></content>
    
    
    <summary type="html">这里是本人账户的链接 Fgaoxing (github.com) Fgaoxing (Fgaoxing) - Gitee.com Fgaoxing-CSDN博客 Fgaoxing - 博客园 (cnblogs.com) ...</summary>
    
    
    
    <category term="公告" scheme="https://www.yt-blog.top/categories/%E5%85%AC%E5%91%8A/"/>
    
    
  </entry>
  
  <entry>
    <title>推一下 Vercel 加速节点</title>
    <link href="https://www.yt-blog.top/9952/"/>
    <id>https://www.yt-blog.top/9952/</id>
    <published>2024-01-25T23:47:22.613Z</published>
    <updated>2024-01-26T00:39:46.848Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a class="header-anchor" href="#写在前面">¶</a>写在前面</h2><p>Vercel 不仅可以部署 Hexo 博客，还能部署很多服务。</p><p>境内选择 Vercel 的站长很多，为了提升访问速度，自然选择了距离大陆最近的香港节点。</p><p>选的多了，节点压力自然就会增大，就算 Vercel 属于大平台，对陆带宽依旧有限，必然会出现互相影响的情况。</p><p>再加上滥用资源等问题出现，不少小伙伴反馈 Vercel 越来越慢。</p><p>今天为 Vercel 用户提供一个加速方案。</p><h2 id="食用方法"><a class="header-anchor" href="#食用方法">¶</a>食用方法</h2><p>将原来解析至 <code>cname.vercel.com</code> 改为 <code>vercel.cdn.yt-blog.top</code></p><blockquote><p>我没有图床所以直接复制杜老师的，但是注意，两个CNAME速度有差距，这个CNAME对应<a href="https://vercel-cyfan.yt-blog.top/">https://vercel-cyfan.yt-blog.top/</a>，这主要是由于104.199.217.228只有电信快，18.162.37.140相对不稳定，但联通和移动快，大部分Vercel节点都是联通和移动快。vercel.cdn.yt-blog.top使用了更多的IP确保在一台出现问题后不会有太面积影响，但灵感来自vercel.cdn.cyfan.top</p></blockquote><p><img src="https://cdn.dusays.com/2024/01/669-1.jpg" alt="" /></p><p>可访问<a href="https://vercel.cdn.yt-blog.top/">Vercel CDN (vercel.cdn.yt-blog.top)</a>查看</p><h2 id="加速原理"><a class="header-anchor" href="#加速原理">¶</a>加速原理</h2><p>Vercel 在大陆周围还有很多节点，其中包含中国台湾、韩国、日本、新加坡等，这些节点的访问延迟在接受范围，且相对香港节点来说带宽更充足。</p><p>Vercel 的 Anycast 会自动将节点解析至距离最近的香港服务器，但如果手动解析则太过麻烦。</p><p><code>vercel.cdn.yt-blog.top</code> 经过不断测速（大约消耗了200MB流量）手动解析，并通过 D 监控检查状态，无法访问时会及时暂停节点。使用时自动解析至附近可用节点，尽可能的选择优质节点。</p><p>这更加类似于CF自选IP，而不是真正的节点，节点IP基于Cyfan的<a href="https://gist.github.com/ChenYFan/fc2bd4ec1795766f2613b52ba123c0f8">Vercel All IP (github.com)</a></p><h2 id="更进一步"><a class="header-anchor" href="#更进一步">¶</a>更进一步</h2><p>可以通过Vercel官方提供的缓存进行加速<br />详细请看：<a href="https://vercel.com/docs/edge-network/caching#cdn-cache-control">https://vercel.com/docs/edge-network/caching#cdn-cache-control</a></p><p>静态网站参考本博客，在根目录放置vercel.json</p><pre><code class="highlight json"><span class="punctuation">&#123;</span>  <span class="attr">&quot;headers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>    <span class="punctuation">&#123;</span>      <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/sw.js&quot;</span><span class="punctuation">,</span>      <span class="attr">&quot;headers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>        <span class="punctuation">&#123;</span>          <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Cache-Control&quot;</span><span class="punctuation">,</span>          <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;public, max-age=0, must-revalidate&quot;</span>        <span class="punctuation">&#125;</span>      <span class="punctuation">]</span>    <span class="punctuation">&#125;</span><span class="punctuation">,</span>    <span class="punctuation">&#123;</span>      <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;(.*)&quot;</span><span class="punctuation">,</span>      <span class="attr">&quot;headers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>        <span class="punctuation">&#123;</span>          <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Cache-Control&quot;</span><span class="punctuation">,</span>          <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;public, s-maxage=86400, max-age=86400&quot;</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span>          <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Vercel-CDN-Cache-Control&quot;</span><span class="punctuation">,</span>          <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;max-age=3600&quot;</span>        <span class="punctuation">&#125;</span>      <span class="punctuation">]</span>    <span class="punctuation">&#125;</span>  <span class="punctuation">]</span><span class="punctuation">&#125;</span></code></pre><p>Vercel在部署时会自动刷新缓存，静态网站缓存可以拉到无限长，动态网站缓存按实际需要</p><h2 id="测速截图"><a class="header-anchor" href="#测速截图">¶</a>测速截图</h2><p>测速工具（节点很多，非常推荐）：<a href="https://zhale.me/http/">https://zhale.me/http/</a></p><p><img src="https://bu.dusays.com/2024/01/16/65a6740fc36ea.png" alt="测速图片 (比较长，有点慢)" /></p><h2 id="问题反馈"><a class="header-anchor" href="#问题反馈">¶</a>问题反馈</h2><p><a href="https://github.com/Fgaoxing/Vercel-CDN">https://github.com/Fgaoxing/Vercel-CDN</a></p><p>我们无法觉得谁使用了CNAME，所以也有一些人通过解析我们CNAME的方式建立自己的Vercel CDN(我给他个面子，不在这里说了)，但多次CNAME会导致速度变慢，如果有人给你发送一张对比图说他的测速比我这个快，大概是因为我这个有宣传页面，所以网站测速比不上Vercel的404</p>]]></content>
    
    
    <summary type="html">写在前面 Vercel 不仅可以部署 Hexo 博客，还能部署很多服务。 境内选择 Vercel 的站长很多，为了提升访问速度，自然选择了距离大陆最近的香港节点。 选的多了，节点压力自然就会增大，就算 Vercel 属于大平台，对陆带宽依旧有限，必然会出现互相影响的情况。 再加上滥用资源等问题出现，不少小伙伴反馈 Vercel 越来越慢。 今天为 Vercel 用户提供一个加速方案。 食用方法 将...</summary>
    
    
    
    <category term="技术" scheme="https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Vercel CDN" scheme="https://www.yt-blog.top/tags/Vercel-CDN/"/>
    
  </entry>
  
  <entry>
    <title>网站优化小窍门</title>
    <link href="https://www.yt-blog.top/3705/"/>
    <id>https://www.yt-blog.top/3705/</id>
    <published>2024-01-16T12:19:56.050Z</published>
    <updated>2024-01-16T12:20:16.922Z</updated>
    
    <content type="html"><![CDATA[<p>首先呢，我发表一下我自己的观点：<br />速度优化有很多方面，并不一定说非得上SW</p><hr /><h2 id="服务器"><a class="header-anchor" href="#服务器">¶</a>服务器</h2><h3 id="虚拟机-虚拟空间"><a class="header-anchor" href="#虚拟机-虚拟空间">¶</a>虚拟机/虚拟空间</h3><p>这里只说GFW外的，GFW内的话基本也用不上<br />首先就是CDN，尤其是中国以外，尽量套一个，有的人可能套了，但是还没开缓存，那一点意义没有，甚至更慢<br />所以一定要为静态内容（或者伪静态）配置合理的缓存</p><h3 id="部署平台"><a class="header-anchor" href="#部署平台">¶</a>部署平台</h3><p>对于一些部署平台，我这里只有Vercel的优化经验<br />其他的平台可以参照<br />首先你要清楚一点：部署平台，基本上都不是单台服务器<br />那这样就好办——测速<br />然后看哪个服务器究竟在哪，一个运营商，哪一个城市哪一条线路快<br />接下来使用DNS的分区域解析，挨个解析就可以了<br />比如我这里的Vercel效果：vercel.cdn.yt-blog.top(随便用，CNAME解析一些就行了)<br />（这个月为了优化网站，我已经测速消耗了200MB的流量，勉强达到国内付费CDN的程度，数据来源：<a href="https://zhale.me/http">炸了么</a>）<br /><img src="https://bu.dusays.com/2024/01/16/65a6740fc36ea.png" alt="测速图 比较长，有点慢" /></p><h2 id="网页"><a class="header-anchor" href="#网页">¶</a>网页</h2><p>说完了服务器，接下来就是网页本身。首先就是尽量让网页体积更小<br />将字体JS CSS之类的各种文件都独立托管于网页本身<br />这样也可以带来更好的速度，尤其是使用免费的资源，还能节省流量</p>]]></content>
    
    
    <summary type="html">首先呢，我发表一下我自己的观点： 速度优化有很多方面，并不一定说非得上SW  服务器 虚拟机/虚拟空间 这里只说GFW外的，GFW内的话基本也用不上 首先就是CDN，尤其是中国以外，尽量套一个，有的人可能套了，但是还没开缓存，那一点意义没有，甚至更慢 所以一定要为静态内容（或者伪静态）配置合理的缓存 部署平台 对于一些部署平台，我这里只有Vercel的优化经验 其他的平台可以参照 首先你要清楚一点...</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【显微镜下的世界】0x1</title>
    <link href="https://www.yt-blog.top/26970/"/>
    <id>https://www.yt-blog.top/26970/</id>
    <published>2023-12-23T06:59:31.077Z</published>
    <updated>2023-12-23T07:01:57.762Z</updated>
    
    <content type="html"><![CDATA[<p>普通光学显微镜+电子目镜<br />如果要是用目镜直接看，会更清晰<br />纸张表面：<br /><img src="https://bu.dusays.com/2023/12/23/6586821773409.jpg" alt="" /><br />4x物镜，目镜WF 100X<br />我脸上的毛（类似长寿眉）<br /><img src="https://bu.dusays.com/2023/12/23/6586822f4f079.jpg" alt="" /><br /><img src="https://bu.dusays.com/2023/12/23/65868235d2fda.jpg" alt="" /><br />10X：<br /><img src="https://bu.dusays.com/2023/12/23/6586825053913.jpg" alt="" /><br /><img src="https://bu.dusays.com/2023/12/23/658682537d2ca.jpg" alt="" /><br />100X：<br /><img src="https://bu.dusays.com/2023/12/23/658682806c6ae.jpg" alt="" /><br /><img src="https://bu.dusays.com/2023/12/23/6586828625158.jpg" alt="" /><br /><img src="https://bu.dusays.com/2023/12/23/6586828c78144.jpg" alt="" /><br /><img src="https://bu.dusays.com/2023/12/23/658682939cb97.jpg" alt="" /><br />暗光（把反光镜立起来）：<br /><img src="https://bu.dusays.com/2023/12/23/658682bad23b7.jpg" alt="" /><br />加倍镜：<br /><img src="https://bu.dusays.com/2023/12/23/658682df04968.jpg" alt="" /><br /><img src="https://bu.dusays.com/2023/12/23/658682e3c5189.jpg" alt="" /><br />叶子:<br /><img src="https://bu.dusays.com/2023/12/23/658682fb9f47a.jpg" alt="" /><br /><img src="https://bu.dusays.com/2023/12/23/658682ff54e2a.jpg" alt="" /><br /><img src="https://bu.dusays.com/2023/12/23/65868302512dc.jpg" alt="" /><br /><img src="https://bu.dusays.com/2023/12/23/65868307a33af.jpg" alt="" /><br /><img src="https://bu.dusays.com/2023/12/23/65868310a42af.jpg" alt="" /><br />铁锈：<br />第一张10x，后面4x，光源是手持手电，从上面打光<br /><img src="https://bu.dusays.com/2023/12/23/6586835b2ee4e.jpg" alt="" /><br /><img src="https://bu.dusays.com/2023/12/23/6586835d08ee7.jpg" alt="" /><br /><img src="https://bu.dusays.com/2023/12/23/6586835fcd768.jpg" alt="" /><br /><img src="https://bu.dusays.com/2023/12/23/658683614ec44.jpg" alt="" /></p>]]></content>
    
    
    <summary type="html">普通光学显微镜+电子目镜 如果要是用目镜直接看，会更清晰 纸张表面：  4x物镜，目镜WF 100X 我脸上的毛（类似长寿眉）   10X：   100X：     暗光（把反光镜立起来）：  加倍镜：   叶子:      铁锈： 第一张10x，后面4x，光源是手持手电，从上面打光     ...</summary>
    
    
    
    <category term="显微镜下的世界" scheme="https://www.yt-blog.top/categories/%E6%98%BE%E5%BE%AE%E9%95%9C%E4%B8%8B%E7%9A%84%E4%B8%96%E7%95%8C/"/>
    
    
    <category term="显微镜下的世界" scheme="https://www.yt-blog.top/tags/%E6%98%BE%E5%BE%AE%E9%95%9C%E4%B8%8B%E7%9A%84%E4%B8%96%E7%95%8C/"/>
    
    <category term="系列" scheme="https://www.yt-blog.top/tags/%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>【Hexo】优化教程</title>
    <link href="https://www.yt-blog.top/46463/"/>
    <id>https://www.yt-blog.top/46463/</id>
    <published>2023-07-17T23:48:24.239Z</published>
    <updated>2024-01-19T01:22:18.559Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文章将从部署速度和访问速度两方面说说如何优化Hexo博客</p></blockquote><h2 id="部署速度"><a class="header-anchor" href="#部署速度">¶</a>部署速度</h2><p>我们可看到Hexo的官网上告诉我们Hexo的生成速度还是很快的</p><p><img src="https://npm.elemecdn.com/ytblogimg/5e4545888b77352d759bb8e4c20259bf.png" alt="https://npm.elemecdn.com/ytblogimg/5e4545888b77352d759bb8e4c20259bf.png" /></p><p>那为啥需要那么长时间呢，我们看看部署的流程</p><ol><li>从NPM安装包</li><li>运行Hexo生成指令</li><li>glup压缩（可选）</li></ol><p>这个流程每次都要运行一遍，非常耗时，如何优化呢</p><h3 id="NPM安装加速"><a class="header-anchor" href="#NPM安装加速">¶</a>NPM安装加速</h3><p>首先确定服务器位置，Github服务器在美国，所以呢只能使用NPM获取优化不了</p><p>但是Vercel可以选择节点位置，方法如下：</p><p>打开一个项目</p><p><img src="https://npm.elemecdn.com/ytblogimg/377239b28a4f1f4151ff826eb696e057.png" alt="https://npm.elemecdn.com/ytblogimg/377239b28a4f1f4151ff826eb696e057.png" /></p><p>点击设置<br /><img src="https://npm.elemecdn.com/ytblogimg/f796110a9f2b0fb8a96c069b11d877ee.png" alt="https://npm.elemecdn.com/ytblogimg/f796110a9f2b0fb8a96c069b11d877ee.png" />然后按图中的配置<br /><img src="https://npm.elemecdn.com/ytblogimg/f03b06eb870514a1ea597f9b588cd639.png" alt="https://npm.elemecdn.com/ytblogimg/f03b06eb870514a1ea597f9b588cd639.png" /></p><p>然后就可以使用NPM镜像了，实测阿里镜像最快</p><p><img src="https://npm.elemecdn.com/ytblogimg/b53d09b87284846842341a9806630c77.png" alt="https://npm.elemecdn.com/ytblogimg/b53d09b87284846842341a9806630c77.png" /></p><p>部署的时间可以压缩最少10秒</p><h3 id="Hexo生成加速"><a class="header-anchor" href="#Hexo生成加速">¶</a>Hexo生成加速</h3><p>首先就是减少文件数量，能删就删</p>]]></content>
    
    
    <summary type="html"> 本文章将从部署速度和访问速度两方面说说如何优化Hexo博客  部署速度 我们可看到Hexo的官网上告诉我们Hexo的生成速度还是很快的  那为啥需要那么长时间呢，我们看看部署的流程  从NPM安装包 运行Hexo生成指令 glup压缩（可选）  这个流程每次都要运行一遍，非常耗时，如何优化呢 NPM安装加速 首先确定服务器位置，Github服务器在美国，所以呢只能使用NPM获取优化不了 但是Ve...</summary>
    
    
    
    <category term="技术" scheme="https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="https://www.yt-blog.top/tags/Hexo/"/>
    
    <category term="网站优化" scheme="https://www.yt-blog.top/tags/%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>【CDNN】CDNN再添一员</title>
    <link href="https://www.yt-blog.top/26824/"/>
    <id>https://www.yt-blog.top/26824/</id>
    <published>2023-05-25T13:17:04.854Z</published>
    <updated>2024-01-19T01:15:20.267Z</updated>
    
    <content type="html"><![CDATA[<p>爱写CDN的我，又写了个新的CDN，CDNN系列再添一员，目前刚上线，不是很稳定，见谅。可以加群了解详情115967669，网站：<a href="https://cdn2.chuqis.com/">https://cdn2.chuqis.com/</a> ，和初七公司合作的【不是广告】<br />目前单文件最大30M，以后会开放付费的50M和100M，自己的回源，不依赖JSD</p>]]></content>
    
    
    <summary type="html">爱写CDN的我，又写了个新的CDN，CDNN系列再添一员，目前刚上线，不是很稳定，见谅。可以加群了解详情115967669，网站：https://cdn2.chuqis.com/ ，和初七公司合作的【不是广告】 目前单文件最大30M，以后会开放付费的50M和100M，自己的回源，不依赖JSD </summary>
    
    
    
    <category term="技术" scheme="https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="CDNN" scheme="https://www.yt-blog.top/tags/CDNN/"/>
    
    <category term="CDN" scheme="https://www.yt-blog.top/tags/CDN/"/>
    
    <category term="Python" scheme="https://www.yt-blog.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>懒加载的妙用：缓存篇</title>
    <link href="https://www.yt-blog.top/49152/"/>
    <id>https://www.yt-blog.top/49152/</id>
    <published>2023-05-07T00:37:05.666Z</published>
    <updated>2023-09-11T12:53:51.859Z</updated>
    
    <content type="html"><![CDATA[<p>很多网站都用了一项技术：懒加载(<strong>Lazyload</strong>)</p><p>用于增加速度，减少请求量，尽管如此每次查看图片还是需要等待他加载完，这很耗时间，如下</p><p><img src="https://cdn2.chuqis.com/gh/fgaoxing/myimg/e3263eddea3f75ba4cbab3fabaaaff63.png" alt="https://cdn2.chuqis.com/gh/fgaoxing/myimg/e3263eddea3f75ba4cbab3fabaaaff63.png" /></p><p><img src="https://cdn2.chuqis.com/gh/fgaoxing/myimg/254514013d87e1d985e08b6144100f49.png" alt="https://cdn2.chuqis.com/gh/fgaoxing/myimg/254514013d87e1d985e08b6144100f49.png" /></p><p>但是如果先呈现，后加载，不就可以了吗。</p><p>这时候就有人跳出来了，</p><blockquote><p>开什么玩笑呢，不加载，怎么呈现？</p></blockquote><p>问得好，其实很简单，我只要把图片存在用户电脑就行了，问题在于怎么存，如果要是使用SW，一旦写错，基本上网站就废了，所以这个不考虑，但是SW但来了一个东西，没错就是<code>Cache</code>，它可以缓存请求，当然也可以存储数据，其实可以直接存储二进制，不过我还是转换成base64存储，由于比较复杂，我就不展示了，</p><p>你访问本网站就可以感受到，代码后续放出来</p>]]></content>
    
    
    <summary type="html">很多网站都用了一项技术：懒加载(Lazyload) 用于增加速度，减少请求量，尽管如此每次查看图片还是需要等待他加载完，这很耗时间，如下   但是如果先呈现，后加载，不就可以了吗。 这时候就有人跳出来了，  开什么玩笑呢，不加载，怎么呈现？  问得好，其实很简单，我只要把图片存在用户电脑就行了，问题在于怎么存，如果要是使用SW，一旦写错，基本上网站就废了，所以这个不考虑，但是SW但来了一个东西，没...</summary>
    
    
    
    
    <category term="次回加载" scheme="https://www.yt-blog.top/tags/%E6%AC%A1%E5%9B%9E%E5%8A%A0%E8%BD%BD/"/>
    
    <category term="Lazyload" scheme="https://www.yt-blog.top/tags/Lazyload/"/>
    
    <category term="Cache" scheme="https://www.yt-blog.top/tags/Cache/"/>
    
    <category term="自主缓存" scheme="https://www.yt-blog.top/tags/%E8%87%AA%E4%B8%BB%E7%BC%93%E5%AD%98/"/>
    
    <category term="网站加速" scheme="https://www.yt-blog.top/tags/%E7%BD%91%E7%AB%99%E5%8A%A0%E9%80%9F/"/>
    
  </entry>
  
  <entry>
    <title>【FastJump.js】简单的快速跳转技术</title>
    <link href="https://www.yt-blog.top/64234/"/>
    <id>https://www.yt-blog.top/64234/</id>
    <published>2023-03-17T08:29:45.000Z</published>
    <updated>2024-04-03T13:23:54.158Z</updated>
    
    <content type="html"><![CDATA[<p>110行写了个小玩意，可以像sw那样离线缓存，和Pjax类似，不过用了自主缓存，fetch做请求，算了上代码吧：</p><pre><code class="highlight js">self.<span class="property">CACHE_NAME</span> = <span class="string">&#x27;FastJumpCache&#x27;</span>; <span class="comment">// 默认的存储名称</span>self.<span class="property">db</span> = &#123;    <span class="attr">read</span>: <span class="function">(<span class="params">key</span>) =&gt;</span> &#123;        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;            caches.<span class="title function_">match</span>(<span class="keyword">new</span> <span class="title class_">Request</span>(<span class="string">`https://LOCALCACHE/<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(key)&#125;</span>`</span>)).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">res</span>) &#123;                res.<span class="title function_">text</span>().<span class="title function_">then</span>(<span class="function"><span class="params">text</span> =&gt;</span> <span class="title function_">resolve</span>(text));            &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;                <span class="title function_">resolve</span>(<span class="literal">null</span>);            &#125;);        &#125;)    &#125;, <span class="attr">write</span>: <span class="function">(<span class="params">key, value</span>) =&gt;</span> &#123;        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;            caches.<span class="title function_">open</span>(<span class="variable constant_">CACHE_NAME</span>).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">cache</span>) &#123;                cache.<span class="title function_">put</span>(<span class="keyword">new</span> <span class="title class_">Request</span>(<span class="string">`https://LOCALCACHE/<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(key)&#125;</span>`</span>), <span class="keyword">new</span> <span class="title class_">Response</span>(value));                <span class="title function_">resolve</span>();            &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;                <span class="title function_">reject</span>();            &#125;);        &#125;);    &#125;&#125;<span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;    self.<span class="property">db</span>.<span class="title function_">read</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">d</span>) &#123;        <span class="keyword">if</span> (!d) &#123;            <span class="title function_">fetch</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">d</span>) &#123;                <span class="keyword">if</span> (d.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;content-type&#x27;</span>) === <span class="string">&#x27;text/html&#x27;</span>) &#123;                    d.<span class="title function_">text</span>().<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">b</span>) &#123;                        self.<span class="property">db</span>.<span class="title function_">write</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>, b)                    &#125;)                &#125;            &#125;)        &#125;    &#125;);&#125;);<span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;        <span class="keyword">var</span> doms = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;a[href]&#x27;</span>);        <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">forEach</span>.<span class="title function_">call</span>(doms, <span class="keyword">function</span> (<span class="params">dom</span>) &#123;            <span class="keyword">if</span> (dom.<span class="property">href</span> &amp;&amp; dom.<span class="property">href</span>.<span class="title function_">indexOf</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">origin</span>) === <span class="number">0</span>) &#123;                dom.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;                    history.<span class="title function_">pushState</span>(&#123;&#125;, <span class="string">&#x27;&#x27;</span>, dom.<span class="property">href</span>);                    self.<span class="property">db</span>.<span class="title function_">read</span>(dom.<span class="property">href</span>).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">d</span>) &#123;                        <span class="keyword">if</span> (d) &#123;                            <span class="variable language_">console</span>.<span class="title function_">clear</span>();                            <span class="variable language_">document</span>.<span class="title function_">open</span>();                            <span class="keyword">try</span> &#123;                                <span class="variable language_">document</span>.<span class="title function_">write</span>(d);                                <span class="keyword">let</span> <span class="title class_">Event</span>_timerun = <span class="variable language_">window</span>.<span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;                                    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">body</span>&amp;&amp;<span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">innerHTML</span>) &#123;                                        <span class="keyword">let</span> <span class="title class_">Event</span> = <span class="keyword">new</span> <span class="title class_">CustomEvent</span>(<span class="string">&#x27;onload&#x27;</span>)                                        <span class="variable language_">document</span>.<span class="title function_">dispatchEvent</span>(<span class="title class_">Event</span>);                                        <span class="variable language_">window</span>.<span class="title function_">dispatchEvent</span>(<span class="title class_">Event</span>);                                        <span class="title class_">Event</span> = <span class="keyword">new</span> <span class="title class_">CustomEvent</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>)                                        <span class="variable language_">document</span>.<span class="title function_">dispatchEvent</span>(<span class="title class_">Event</span>);                                        <span class="variable language_">window</span>.<span class="title function_">dispatchEvent</span>(<span class="title class_">Event</span>);                                        <span class="variable language_">window</span>.<span class="built_in">clearInterval</span>(<span class="title class_">Event</span>_timerun)                                    &#125;                                &#125;,<span class="number">500</span>)                                <span class="title function_">fetch</span>(dom.<span class="property">href</span>).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">d</span>) &#123;                                    <span class="keyword">if</span> (d.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;content-type&#x27;</span>) === <span class="string">&#x27;text/html&#x27;</span>) &#123;                                        d.<span class="title function_">text</span>().<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">b</span>) &#123;                                            self.<span class="property">db</span>.<span class="title function_">write</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>, b)                                        &#125;)                                    &#125;                                &#125;)                            &#125; <span class="keyword">catch</span> (e) &#123;                            &#125;                        &#125; <span class="keyword">else</span> &#123;                            <span class="title function_">fetch</span>(dom.<span class="property">href</span>).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">d</span>) &#123;                                <span class="keyword">if</span> (d.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;content-type&#x27;</span>) === <span class="string">&#x27;text/html&#x27;</span>) &#123;                                    d.<span class="title function_">text</span>().<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">b</span>) &#123;                                        <span class="variable language_">console</span>.<span class="title function_">clear</span>();                                        <span class="variable language_">document</span>.<span class="title function_">open</span>();                                        <span class="keyword">try</span> &#123;                                            <span class="variable language_">document</span>.<span class="title function_">write</span>(b)                                            <span class="keyword">let</span> <span class="title class_">Event</span>_timerun = <span class="variable language_">window</span>.<span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;                                                <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">body</span>&amp;&amp;<span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">innerHTML</span>) &#123;                                                    <span class="keyword">let</span> <span class="title class_">Event</span> = <span class="keyword">new</span> <span class="title class_">CustomEvent</span>(<span class="string">&#x27;onload&#x27;</span>)                                                    <span class="variable language_">document</span>.<span class="title function_">dispatchEvent</span>(<span class="title class_">Event</span>);                                                    <span class="variable language_">window</span>.<span class="title function_">dispatchEvent</span>(<span class="title class_">Event</span>);                                                    <span class="title class_">Event</span> = <span class="keyword">new</span> <span class="title class_">CustomEvent</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>)                                                    <span class="variable language_">document</span>.<span class="title function_">dispatchEvent</span>(<span class="title class_">Event</span>);                                                    <span class="variable language_">window</span>.<span class="title function_">dispatchEvent</span>(<span class="title class_">Event</span>);                                                    <span class="variable language_">window</span>.<span class="built_in">clearInterval</span>(<span class="title class_">Event</span>_timerun)                                                &#125;                                            &#125;,<span class="number">500</span>)                                        &#125; <span class="keyword">catch</span> (e) &#123;                                        &#125;                                        self.<span class="property">db</span>.<span class="title function_">write</span>(dom.<span class="property">href</span>, b)                                    &#125;).<span class="title function_">catch</span>(<span class="keyword">function</span> (<span class="params">e</span>) &#123;                                        <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = dom.<span class="property">href</span>                                    &#125;)                                &#125;                            &#125;).<span class="title function_">catch</span>(<span class="keyword">function</span> (<span class="params">e</span>) &#123;                                <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = dom.<span class="property">href</span>                            &#125;)                        &#125;                    &#125;).<span class="title function_">catch</span>(<span class="keyword">function</span> (<span class="params">e</span>) &#123;                        <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = dom.<span class="property">href</span>                    &#125;)                    <span class="keyword">return</span> <span class="literal">false</span>;                &#125;            &#125;        &#125;);    &#125;, <span class="number">500</span>)&#125;);</code></pre><p>注意不能与Pjax一起使用！！<br />鄙人水平有限，请斧正<br />有不少Bug，仅供测试，不可以在线上环境使用</p>]]></content>
    
    
    <summary type="html">110行写了个小玩意，可以像sw那样离线缓存，和Pjax类似，不过用了自主缓存，fetch做请求，算了上代码吧： self.CACHE_NAME = &#39;FastJumpCache&#39;; // 默认的存储名称 self.db = {     read: (key) =&amp;gt; {         return new Promise((resolve, reject) =&amp;gt; {         ...</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>BiliBili崩了</title>
    <link href="https://www.yt-blog.top/47626/"/>
    <id>https://www.yt-blog.top/47626/</id>
    <published>2023-03-05T20:48:16.000Z</published>
    <updated>2023-09-11T12:09:32.500Z</updated>
    
    <content type="html"><![CDATA[<p>这是唯一一次我在看视频的时候崩的，这回着就是你在点开视频的时候就会：</p><p><img src="https://img.yt-blog.top/1678020769.2601757.png" alt="截图" /></p><p>，水文一篇，等待BiliBili解析一下这次故障</p>]]></content>
    
    
    <summary type="html">这是唯一一次我在看视频的时候崩的，这回着就是你在点开视频的时候就会：  ，水文一篇，等待BiliBili解析一下这次故障 ...</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【New Bing】New Bing免代理申请和使用</title>
    <link href="https://www.yt-blog.top/52329/"/>
    <id>https://www.yt-blog.top/52329/</id>
    <published>2023-02-15T20:54:15.000Z</published>
    <updated>2024-01-19T01:20:19.911Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>已失效</p></blockquote><p>大家都知道哈，前段时间，有个AI叫ChatGPT，很火，所有人都在说。不过据说好像现在收费了，OpenAI么，懂得都懂，先免费，再收费，像是DALL·E、Copilot都是。但是因为国内不能访问，所以就没用上……</p><p>现在又搞出来newBing（后面估计会收费，为了AI，都给服务器干崩了），不过国内还是不让用，这时候就需要一些合法手段来访问。</p><h2 id="教程"><a class="header-anchor" href="#教程">¶</a>教程</h2><p>其实很简单</p><h3 id="申请"><a class="header-anchor" href="#申请">¶</a>申请</h3><p>如果直接访问<a href="https://www.bing.com/new">https://www.bing.com/new</a>，百分百不行，咋办，他是按照国家的，<s>所以我们只要去国外就行了</s>伪装呗，多简单啊！不过咱们说了，要<strong>合法</strong>，所以用非常手段肯定不行。先要明白原理，简单来说就是IP定位，那么我们就伪装IP</p><p>IP获取有好几种方式，比如用网路发送数据的IP，这样就需要用到代理（代理是合法的，但是麻烦），另一种是通过Header中的x-forwarded-for字段获取。这主要看bing的方式，他用的是后者，我们操作一下。所以我们需要改头，这个简单。</p><p>首先去下载一个插件，如果有类似插件，可以不用下载，这里只用 <code>Header Editor</code>举例</p><p>官网下载页：<a href="https://he.firefoxcn.net/zh-CN/guide.html">开始 | Header Editor (firefoxcn.net)</a></p><p>安装好，打开它</p><p><img src="https://img.yt-blog.top/1676467120242.webp" alt="https://cdn2.chuqis.com/gh/fgaoxing/myimg/1676467120242.webp" /></p><p>加号添加，按照图片配置好保存即可</p><p><img src="https://img.yt-blog.top/1677339335.9528594.webp" alt="https://cdn2.chuqis.com/gh/fgaoxing/myimg/1677339335.9528594.webp" /></p><p>名称随意，如果不会，就按照图片填写即可</p><p>访问<a href="https://www.bing.com/">必应 (bing.com)</a>，不跳转cn.就说明成功了</p><p><img src="https://img.yt-blog.top/1676468336326.webp" alt="https://cdn2.chuqis.com/gh/fgaoxing/myimg/1676468336326.webp" /></p><p>选择美国</p><p><img src="https://img.yt-blog.top/1676468388394.webp" alt="https://cdn2.chuqis.com/gh/fgaoxing/myimg1676468388394.webp" /></p><p>然后访问<a href="https://www.bing.com/new">必应 (bing.com)</a>，点击加入即可，等待邮件，大概两三天</p><p><img src="https://img.yt-blog.top/1676468496114.webp" alt="https://cdn2.chuqis.com/gh/fgaoxing/myimg/1676468496114.webp" /></p><p>然后恭喜，你就有了NewBing</p><p>其实平时用国外ip访问bing也可以减少广告，增加更多搜索内容</p><p>最后只要按照上面的操作，再来一遍，然后在搜索框输入内容即可开始问答，按照网上的提示，可以调教，但是我没试过。不要滥用，会被封。</p><p>Bing可能要超过谷歌了！</p>]]></content>
    
    
    <summary type="html"> 已失效  大家都知道哈，前段时间，有个AI叫ChatGPT，很火，所有人都在说。不过据说好像现在收费了，OpenAI么，懂得都懂，先免费，再收费，像是DALL·E、Copilot都是。但是因为国内不能访问，所以就没用上…… 现在又搞出来newBing（后面估计会收费，为了AI，都给服务器干崩了），不过国内还是不让用，这时候就需要一些合法手段来访问。 教程 其实很简单 申请 如果直接访问https...</summary>
    
    
    
    <category term="技术" scheme="https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="AI" scheme="https://www.yt-blog.top/tags/AI/"/>
    
    <category term="New Bing" scheme="https://www.yt-blog.top/tags/New-Bing/"/>
    
    <category term="ChatGPT" scheme="https://www.yt-blog.top/tags/ChatGPT/"/>
    
    <category term="OpenAI" scheme="https://www.yt-blog.top/tags/OpenAI/"/>
    
  </entry>
  
  <entry>
    <title>simplest-server</title>
    <link href="https://www.yt-blog.top/51672/"/>
    <id>https://www.yt-blog.top/51672/</id>
    <published>2023-01-10T10:24:59.000Z</published>
    <updated>2024-04-20T09:01:09.138Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前情"><a class="header-anchor" href="#前情">¶</a>前情</h2><p>给各位道个歉，好久没更新了</p><p>给大家带来一个好东西</p><p>众所周知，我会node.js</p><p>但是把，我一开始就选择了http库（就是原生库）</p><p>所以用express就会不太顺手</p><p>但是原生的http又没啥东西，就很难受几乎什么都要自己写，包括cookie的操作</p><p>所以我就基于原生的http包写了一个框架，使用路由的方式，可以使用无服务器函数</p><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/simplest-server/simplest-server"><img src="https://github-readme-stats.xaoxuu.com//api/pin/?username=simplest-server&repo=simplest-server&show_owner=true"/></a><p><a href="https://github.com/simplest-server/simplest-server"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="140" height="20"><clipPath id="r"><rect width="140" height="20" fill="#fff" rx="3"/></clipPath><g clip-path="url(#r)"><rect width="45" height="20" fill="#555"/><rect x="45" width="95" height="20" fill="#007ec6"/><rect width="140" height="20" fill="url(#s)"/></g><g fill="#fff" text-anchor="middle" font-family="Verdana,Geneva,DejaVu Sans,sans-serif" text-rendering="geometricPrecision" font-size="110"><text x="235" y="140" transform="scale(.1)" fill="#fff">GitHub</text><text x="915" y="140" transform="scale(.1)" fill="#fff" textLength="850">simplest-server</text></g></svg></a><br /><a href="https://www.npmjs.com/package/simplest-server"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="140" height="20"><clipPath id="r"><rect width="140" height="20" fill="#fff" rx="3"/></clipPath><g clip-path="url(#r)"><rect width="45" height="20" fill="#555"/><rect x="45" width="95" height="20" fill="#e05d44"/><rect width="140" height="20" fill="url(#s)"/></g><g fill="#fff" text-anchor="middle" font-family="Verdana,Geneva,DejaVu Sans,sans-serif" text-rendering="geometricPrecision" font-size="110"><text x="235" y="140" transform="scale(.1)" fill="#fff">NPM</text><text x="915" y="140" transform="scale(.1)" fill="#fff" textLength="850">simplest-server</text></g></svg></a><br /><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="140" height="20"><clipPath id="r"><rect width="140" height="20" fill="#fff" rx="3"/></clipPath><g clip-path="url(#r)"><rect width="45" height="20" fill="#555"/><rect x="45" width="95" height="20" fill="green"/><rect width="140" height="20" fill="url(#s)"/></g><g fill="#fff" text-anchor="middle" font-family="Verdana,Geneva,DejaVu Sans,sans-serif" text-rendering="geometricPrecision" font-size="110"><text x="235" y="140" transform="scale(.1)" fill="#fff">LGPL</text><text x="915" y="140" transform="scale(.1)" fill="#fff">License</text></g></svg></p><h2 id="有关包的一些东西"><a class="header-anchor" href="#有关包的一些东西">¶</a>有关包的一些东西</h2><p>目前由JS编写使用CJS引入，后续可能会迁移到Ts</p><p>这个NPM包目前是测试版，但基础功能已经OK了</p><p>你可以这样引入</p><pre><code class="highlight js"><span class="keyword">const</span> ss = <span class="built_in">require</span>(<span class="string">&#x27;simplest-server&#x27;</span>);</code></pre><p>目前包含如下函数</p><pre><code class="highlight js"><span class="keyword">const</span> ss = <span class="built_in">require</span>(<span class="string">&#x27;simplest-server&#x27;</span>);ss.<span class="property">http</span> # http服务ss.<span class="property">maps</span> # 本地文件映射ss.<span class="property">map</span> # 本地文件映射ss.<span class="property">ejs</span> # 集成的<span class="variable constant_">EJS</span>ss.<span class="property">err</span> # 返回报错页面</code></pre><p>更多文档看<a href="https://www.yt-blog.top/docs/simplest-server/">Simplest Server 文档</a>（大概率没写完，所以只能等）</p><h3 id="关于https"><a class="header-anchor" href="#关于https">¶</a>关于https</h3><p>目前不支持，后续加入</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前情&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#前情&quot;&gt;¶&lt;/a&gt;前情&lt;/h2&gt;
&lt;p&gt;给各位道个歉，好久没更新了&lt;/p&gt;
&lt;p&gt;给大家带来一个好东西&lt;/p&gt;
&lt;p&gt;众所周知，我会node.js&lt;/p&gt;
&lt;p&gt;但是把，我一开始就选择了htt</summary>
      
    
    
    
    <category term="技术" scheme="https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Node.js" scheme="https://www.yt-blog.top/tags/Node-js/"/>
    
    <category term="simplest-server" scheme="https://www.yt-blog.top/tags/simplest-server/"/>
    
  </entry>
  
  <entry>
    <title>Python实现文件查重</title>
    <link href="https://www.yt-blog.top/58785/"/>
    <id>https://www.yt-blog.top/58785/</id>
    <published>2022-10-07T12:22:03.000Z</published>
    <updated>2022-10-14T16:48:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>同时支持文件查重，空文件夹查找，大文件查找等，后续还将不断更新！！</p><h2 id="开发原因"><a class="header-anchor" href="#开发原因">¶</a>开发原因</h2><p>其实是看视频，看到wechat分享文件会存储多份，浪费空间，而且你还找不到</p><h2 id="安装"><a class="header-anchor" href="#安装">¶</a>安装</h2><pre><code class="highlight shell">pip install find-same-md5-file</code></pre><h2 id="使用方法"><a class="header-anchor" href="#使用方法">¶</a>使用方法</h2><blockquote><p><strong>本次发布仅面向开发者！！</strong></p></blockquote><p><a href="https://github.com/Fgaoxing/find-same-file">Fgaoxing/find-same-file: Python searches the same file based on md5 (github.com)</a></p><p><a href="https://pypi.org/project/find-same-md5-file/">PYPI</a></p><pre><code class="highlight python"><span class="keyword">import</span> find_same_md5_file<span class="comment"># 寻找相同文件，第一个参数是路径后面需要加/</span><span class="built_in">print</span>(find_same_md5_file.print_same(<span class="string">&#x27;C:/&#x27;</span>))<span class="comment"># 寻找空文件夹，第一个参数是路径后面需要加/</span><span class="built_in">print</span>(find_same_md5_file.find_empty_dir(<span class="string">&#x27;C:/&#x27;</span>))<span class="comment"># 查找大文件 第一个参数是路径后面需要加/，第二个参数是大小单位是字节</span><span class="built_in">print</span>(find_same_md5_file.find_big_file(<span class="string">&#x27;U:/&#x27;</span>, <span class="number">3685</span>))</code></pre><h2 id="提示！！！！"><a class="header-anchor" href="#提示！！！！">¶</a>提示！！！！</h2><p>如果路径不存在会报错TypeError，后续版本修复。<br /><strong>1.0.0</strong>之前的版本均为测是版本，函数名有变动可能。<br />建议使用PYPI版本，而不是Github版本，Github更新不及时。</p><h2 id="图形化界面"><a class="header-anchor" href="#图形化界面">¶</a>图形化界面</h2><p>目前还在开发，由<a href="https://www.oblivionocean.top/">玄云海</a>的承担 （我也在，<s>官网我写的有点操，将就着看</s>）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;同时支持文件查重，空文件夹查找，大文件查找等，后续还将不断更新！！&lt;/p&gt;
&lt;h2 id=&quot;开发原因&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#开发原因&quot;&gt;¶&lt;/a&gt;开发原因&lt;/h2&gt;
&lt;p&gt;其实是看视频，看到wechat分享文件会存储多份，浪费空间</summary>
      
    
    
    
    <category term="技术" scheme="https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="python" scheme="https://www.yt-blog.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>放开想，越离谱越好</title>
    <link href="https://www.yt-blog.top/20220727/2244/"/>
    <id>https://www.yt-blog.top/20220727/2244/</id>
    <published>2022-07-27T22:44:53.000Z</published>
    <updated>2024-04-20T09:01:09.138Z</updated>
    
    <content type="html"><![CDATA[<!-- 本文是[吹神求杀](https://chuishen.cf/)的QQ聊天截屏--><!--用时1小时15分--><!--![img](https://unpkg.com/ytblogimg/1668250571787.png)--><!--![img](https://unpkg.com/ytblogimg/1668250589674.webp)--><blockquote><p>文章被删除了！</p></blockquote><style>.ai-summary{display: none;}</style>]]></content>
    
    
    <summary type="html"> 文章被删除了！     </summary>
    
    
    
    
    <category term="话题" scheme="https://www.yt-blog.top/tags/%E8%AF%9D%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>2022 夏季应用推荐</title>
    <link href="https://www.yt-blog.top/57865/"/>
    <id>https://www.yt-blog.top/57865/</id>
    <published>2022-07-24T17:00:49.000Z</published>
    <updated>2024-02-29T02:38:27.267Z</updated>
    
    <content type="html"><![CDATA[<h2 id="声明"><a class="header-anchor" href="#声明">¶</a>声明</h2><p>我没收钱，不排名！！！！</p><p>无广告，无病毒，很干净！！！</p><h2 id="正文"><a class="header-anchor" href="#正文">¶</a>正文</h2><h3 id="Lively-Wallpaper"><a class="header-anchor" href="#Lively-Wallpaper">¶</a>Lively Wallpaper</h3><p>由于目前仅支持<strong>Microsoft Store</strong>，所以只限于<strong>Win8.1</strong>以上</p><p><a href="https://apps.microsoft.com/store/detail/lively-wallpaper/9NTM2QC6QWS7?hl=zh-cn&amp;gl=CN">Lively Wallpaper - Microsoft Store 应用程序</a></p><p>效果很不错，可以用网页，如果需要背景的网页我可以出一期</p><p><img src="https://img.yt-blog.top/1668251213453.webp" alt="img" /></p><h3 id="酷呆桌面"><a class="header-anchor" href="#酷呆桌面">¶</a>酷呆桌面</h3><p>一个在GitHub开源的桌面整理软件软件：<a href="https://www.coodesker.com/">https://www.coodesker.com/</a></p><h3 id="Windows超级管理器"><a class="header-anchor" href="#Windows超级管理器">¶</a>Windows超级管理器</h3><p>非常好用的工具箱</p><p><img src="https://img.yt-blog.top/1668251186717.webp" alt="img" /></p><p>官网：<a href="https://www.collithel.com/supermanager/">科利特尔Collithel - Windows超级管理器系列</a></p><h3 id="NDM"><a class="header-anchor" href="#NDM">¶</a>NDM</h3><p>汉化版，免费用</p><p><img src="https://unpkg.com/ytblogimg/1668256242419.webp" alt="img" /></p><div class="tag pandown-tags"><pandown type="lz" url="https://yt-blog.lanzoum.com/iEMKL08h8wde" pwd="ytblog" fname="NeatDM.zip"></pandown><script>Jian.load.js("https://unpkg.com/pandown", pandown)</script></div>]]></content>
    
    
    <summary type="html">声明 我没收钱，不排名！！！！ 无广告，无病毒，很干净！！！ 正文 Lively Wallpaper 由于目前仅支持Microsoft Store，所以只限于Win8.1以上 Lively Wallpaper - Microsoft Store 应用程序 效果很不错，可以用网页，如果需要背景的网页我可以出一期  酷呆桌面 一个在GitHub开源的桌面整理软件软件：https://www.coode...</summary>
    
    
    
    <category term="应用推荐" scheme="https://www.yt-blog.top/categories/%E5%BA%94%E7%94%A8%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="应用推荐" scheme="https://www.yt-blog.top/tags/%E5%BA%94%E7%94%A8%E6%8E%A8%E8%8D%90/"/>
    
    <category term="2022" scheme="https://www.yt-blog.top/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>cdnn，jsdelivr的代替方案</title>
    <link href="https://www.yt-blog.top/20220624/1936/"/>
    <id>https://www.yt-blog.top/20220624/1936/</id>
    <published>2022-06-24T19:36:45.000Z</published>
    <updated>2023-09-11T12:36:42.164Z</updated>
    
    <content type="html"><![CDATA[<a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/Fgaoxing/cdnn"><img src="https://github-readme-stats.xaoxuu.com//api/pin/?username=Fgaoxing&repo=cdnn&show_owner=true"/></a><p>在这里说一声抱歉，好久没更新了。<br />大家知道之前jsdelivr中国区无法访问（已恢复）<br />然后我写了这个叫CDNN的玩意</p><p><a href="https://www.oscs1024.com/project/Fgaoxing/cdnn?ref=badge_small"><img src="https://www.oscs1024.com/platform/badge/Fgaoxing/cdnn.svg?size=small" alt="OSCS 状态" /></a></p><!-- more --><h2 id="注意"><a class="header-anchor" href="#注意">¶</a>注意</h2><p>支持npm和图片</p><p>github地址：<a href="https://website.com/gh/:owner/:repo@:branch/:path">https://website.com/gh/:owner/:repo@:branch/:path</a></p><p>手动更新：<a href="https://website.com/api/:owner/:repo@:branch/:path">https://website.com/api/:owner/:repo@:branch/:path</a></p><p>NPM地址：<a href="https://website.com/npm/:owner/:repo@:branch/:path">https://website.com/npm/:owner/:repo@:branch/:path</a></p><h2 id="文档"><a class="header-anchor" href="#文档">¶</a>文档</h2><p><a href="https://vercel.com/new/clone?repository-url=https://github.com/Fgaoxing/cdnn"><img src="https://camo.githubusercontent.com/5e471e99e8e022cf454693e38ec843036ec6301e27ee1e1fa10325b1cb720584/68747470733a2f2f76657263656c2e636f6d2f627574746f6e" alt="部署到 Vercel" /></a><br />设置环境变量<br />appId，appKey<br />数据库是（必须是国际版）<br /><a href="https://console.leancloud.app/">https://console.leancloud.app/</a><br />新建class，<code>gh</code><br />不要任何限制<br />创建参数<br /><img src="https://user-images.githubusercontent.com/92655031/170483364-2e515722-217b-4bf8-89f6-42887d24f203.png" alt="github图片" /><br />然后在根目录添加favicon.ico和index.html(主页代码）</p><h2 id="请大佬"><a class="header-anchor" href="#请大佬">¶</a>请大佬</h2><p>如果你是Node.js大佬请帮我优化，谢谢！</p><h2 id="打赏"><a class="header-anchor" href="#打赏">¶</a>打赏</h2><p>开发不易，给点钱吧！<br /><img src="https://cdn2.chuqis.com/gh/fgaoxing/myimg/webp/%E6%89%93%E8%B5%8F-%E7%89%B9%E5%86%99.webp" alt="打赏" /></p>]]></content>
    
    
    <summary type="html">{% ghcard Fgaoxing/cdnn %} 在这里说一声抱歉，好久没更新了。 大家知道之前jsdelivr中国区无法访问（已恢复） 然后我写了这个叫CDNN的玩意  注意 支持npm和图片 github地址：https://website.com/gh/:owner/:repo@:branch/:path 手动更新：https://website.com/api/:owner/:repo...</summary>
    
    
    
    <category term="技术" scheme="https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Node.js" scheme="https://www.yt-blog.top/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Pandown.js</title>
    <link href="https://www.yt-blog.top/56637/"/>
    <id>https://www.yt-blog.top/56637/</id>
    <published>2022-05-05T12:00:30.000Z</published>
    <updated>2024-02-11T18:42:40.255Z</updated>
    
    <content type="html"><![CDATA[<p><strong>这不是Node.js包！</strong></p><p><strong>这是个javascript的小工具？</strong></p><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/Fgaoxing/pandown-js"><img src="https://github-readme-stats.xaoxuu.com//api/pin/?username=Fgaoxing&repo=pandown-js&show_owner=true"/></a><p><s>↑↑↑和上次一样的开头↑↑↑</s></p><!-- more --><h2 id="前情"><a class="header-anchor" href="#前情">¶</a>前情</h2><p>我们一般会使用链接但是，怎样的<a href="#%E5%89%8D%E6%83%85">xx网盘链接</a>提取码：xxxx<br />非常不美观所以我就写了这个<br /><pandown type="baidu" url="123" pwd="1234" fname="啥都没有，我没放链接"></pandown><br /><pandown type="tx" url="123" pwd="1234" fname="啥都没有，我没放链接"></pandown><br /><pandown type="onedrive" url="123" pwd="1234" fname="啥都没有，我没放链接"></pandown><br /><pandown type="hc" url="123" pwd="1234" fname="啥都没有，我没放链接"></pandown><br /><pandown type="ty" url="123" pwd="1234" fname="啥都没有，我没放链接"></pandown><br /><pandown type="aliyun" url="123" pwd="1234" fname="啥都没有，我没放链接"></pandown><br /><pandown type="115" url="123" pwd="1234" fname="啥都没有，我没放链接"></pandown><br /><pandown type="jg" url="123" pwd="1234" fname="啥都没有，我没放链接"></pandown><br /><pandown type="360" url="123" pwd="1234" fname="啥都没有，我没放链接"></pandown><br /><pandown type="123" url="123" pwd="1234" fname="啥都没有，我没放链接"></pandown><br /><pandown type="qn" url="123" pwd="1234" fname="啥都没有，我没放链接"></pandown><br /><pandown type="github" url="123" pwd="1234" fname="啥都没有，我没放链接"></pandown><br /><pandown type="lz" url="123" pwd="1234" fname="啥都没有，我没放链接"></pandown></p><script>pandown()</script><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><h3 id="引入"><a class="header-anchor" href="#引入">¶</a>引入</h3><pre><code class="highlight html"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/pandown&quot;</span></span></code></pre><p>样例（参数看后面）</p><pre><code class="highlight html"><span class="tag">&lt;<span class="name">pandown</span> <span class="attr">type</span>=<span class="string">&quot;lz&quot;</span> <span class="attr">url</span>=<span class="string">&quot;123&quot;</span> <span class="attr">pwd</span>=<span class="string">&quot;1234&quot;</span> <span class="attr">fname</span>=<span class="string">&quot;啥都没有，我没放链接&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">pandown</span>&gt;</span></code></pre><p>自动生成，但如果你的网站没有生产<br />可以使用：</p><pre><code class="highlight html"><span class="tag">&lt;<span class="name">script</span>&gt;</span>pandown()<span class="tag">&lt;/<span class="name">script</span>&gt;</span></code></pre><h3 id="参数"><a class="header-anchor" href="#参数">¶</a>参数</h3><table><thead><tr><th>type</th><th>url</th><th>pwd</th><th>fname</th></tr></thead><tbody><tr><td>网盘类型</td><td>网盘链接</td><td>提取码</td><td>文件名</td></tr><tr><td><a href="#type%E5%8F%82%E6%95%B0%E9%80%89%E9%A1%B9">type参数选项</a></td><td></td><td>没有的话可以空着(type为github时空)</td><td>随意</td></tr></tbody></table><h4 id="type参数选项"><a class="header-anchor" href="#type参数选项">¶</a>type参数选项</h4><table><thead><tr><th>网盘名</th><th>选项</th></tr></thead><tbody><tr><td>百度网盘</td><td>baidu</td></tr><tr><td>腾讯微云</td><td>tx</td></tr><tr><td>onedrive</td><td>onedrive</td></tr><tr><td>和彩云</td><td>hc</td></tr><tr><td>天翼云</td><td>ty</td></tr><tr><td>阿里网盘</td><td>aliyun</td></tr><tr><td>115网盘</td><td>115</td></tr><tr><td>坚果云</td><td>jg</td></tr><tr><td>360安全云盘</td><td>360</td></tr><tr><td>123网盘</td><td>123</td></tr><tr><td>七牛云</td><td>qn</td></tr><tr><td>Github(呵呵呵)</td><td>github</td></tr><tr><td>蓝奏云</td><td>lz</td></tr><tr><td>自定义（<a href="#%E8%87%AA%E5%AE%9A%E4%B9%89">文档点我</a>）</td><td>yun</td></tr></tbody></table><h3 id="自定义"><a class="header-anchor" href="#自定义">¶</a>自定义</h3><p>如果你的网盘没在上面，请使用次条<br /><strong>提示:</strong> 该功能下下载图标为黑色，侧边没有小条</p><h4 id="参数-v2"><a class="header-anchor" href="#参数-v2">¶</a>参数</h4><table><thead><tr><th>type</th><th>url</th><th>pwd</th><th>fname</th><th>name</th><th>color</th></tr></thead><tbody><tr><td>网盘类型</td><td>网盘链接</td><td>提取码</td><td>文件名</td><td>网盘名</td><td>主题色</td></tr><tr><td>必须为 <code>yun</code></td><td></td><td>没有的话可以空着</td><td>随意</td><td></td><td>前面要有 <code>#</code></td></tr></tbody></table>]]></content>
    
    
    <summary type="html">这不是Node.js包！ 这是个javascript的小工具？ {% ghcard Fgaoxing/pandown-js %} ↑↑↑和上次一样的开头↑↑↑ 前情 我们一般会使用链接但是，怎样的xx网盘链接提取码：xxxx 非常不美观所以我就写了这个                 代码 引入 &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;qu...</summary>
    
    
    
    <category term="技术" scheme="https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="js" scheme="https://www.yt-blog.top/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Tool.js</title>
    <link href="https://www.yt-blog.top/20220430/1609/"/>
    <id>https://www.yt-blog.top/20220430/1609/</id>
    <published>2022-04-30T16:09:30.000Z</published>
    <updated>2024-02-11T19:14:35.349Z</updated>
    
    <content type="html"><![CDATA[<p><strong>这不是Node.js包！</strong></p><p><strong>这是个javascript的小工具？</strong></p><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/Fgaoxing/Tool-js"><img src="https://github-readme-stats.xaoxuu.com//api/pin/?username=Fgaoxing&repo=Tool-js&show_owner=true"/></a><!-- more --><h2 id="用法"><a class="header-anchor" href="#用法">¶</a>用法</h2><h3 id="tool-js"><a class="header-anchor" href="#tool-js">¶</a>tool.js</h3><pre><code class="highlight HTML"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/Fgaoxing/Tool-js/tool.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></code></pre><p>会有一定延迟</p><h4 id="getQueryVariable"><a class="header-anchor" href="#getQueryVariable">¶</a>getQueryVariable</h4><pre><code class="highlight JavaScript"><span class="title function_">getQueryVariable</span>(variable,err)</code></pre><p>用于获取url参数</p><table><thead><tr><th>variable</th><th>err</th></tr></thead><tbody><tr><td>参数名</td><td>不存在时返回</td></tr></tbody></table><h4 id="lantern"><a class="header-anchor" href="#lantern">¶</a>lantern</h4><pre><code class="highlight JavaScript"><span class="title function_">lantern</span>()</code></pre><p>春节小灯笼</p><h4 id="Memorial"><a class="header-anchor" href="#Memorial">¶</a>Memorial</h4><pre><code class="highlight JavaScript"><span class="title class_">Memorial</span>()</code></pre><p>国家公祭日时，网站变灰</p><h4 id="TombSweepingDay"><a class="header-anchor" href="#TombSweepingDay">¶</a>TombSweepingDay</h4><pre><code class="highlight JavaScript"><span class="title class_">TombSweepingDay</span>()</code></pre><p>清明节时，网站变灰</p><h4 id="RestrictedPass"><a class="header-anchor" href="#RestrictedPass">¶</a>RestrictedPass</h4><pre><code class="highlight JavaScript"><span class="title class_">RestrictedPass</span>(url)</code></pre><table><thead><tr><th>url</th></tr></thead><tbody><tr><td>允许跳转网址中的关键字</td></tr><tr><td>意味着只有允许的网址才可跳转</td></tr><tr><td>这里是关键字</td></tr><tr><td>如<a href="https://tool-js.vercel.app">https://tool-js.vercel.app</a> ,只需填写tool-js</td></tr></tbody></table><h4 id="UrlChUrlChange"><a class="header-anchor" href="#UrlChUrlChange">¶</a>UrlChUrlChange</h4><pre><code class="highlight JavaScript"><span class="title class_">MirrorProtection</span>(url)</code></pre><table><thead><tr><th>head</th><th>footer</th><th>change</th><th>out</th></tr></thead><tbody><tr><td>加在url前面</td><td>加在url后面</td><td>url时候转换为Url编码(true/false)</td><td>不转换关键字，包含关键字，则会保持原有url</td></tr></tbody></table><p><strong>javascript: 不会转换</strong></p><p><strong>并未排除当前网站链接</strong></p><h4 id="MirrorProtection"><a class="header-anchor" href="#MirrorProtection">¶</a>MirrorProtection</h4><pre><code class="highlight JavaScript"><span class="title class_">MirrorProtection</span>(url)</code></pre><table><thead><tr><th>url</th></tr></thead><tbody><tr><td>域名(后面不要有/），如：<a href="https://github.com">https://github.com</a></td></tr><tr><td><strong>可以本地访问，可以使用turn.html</strong></td></tr></tbody></table><h4 id="RestrictedPass-v2"><a class="header-anchor" href="#RestrictedPass-v2">¶</a>RestrictedPass</h4><pre><code class="highlight JavaScript"><span class="title class_">RestrictedPass</span>(url)</code></pre><table><thead><tr><th>url</th></tr></thead><tbody><tr><td>特定字符</td></tr></tbody></table><p>只允许包含特定字符的url跳转到页面</p><h3 id="sha-js"><a class="header-anchor" href="#sha-js">¶</a>sha.js</h3><pre><code class="highlight HTML"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/Fgaoxing/Tool-js/tool.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></code></pre><p>会有一定延迟</p><h4 id="hex-sha1"><a class="header-anchor" href="#hex-sha1">¶</a>hex_sha1</h4><pre><code class="highlight JavaScript"><span class="title function_">hex_sha1</span>(s)</code></pre><table><thead><tr><th>s</th></tr></thead><tbody><tr><td>要加密的文本</td></tr></tbody></table><p>对文本加密，无法解密！</p><h3 id="email-js"><a class="header-anchor" href="#email-js">¶</a>email.js</h3><pre><code class="highlight HTML"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/Fgaoxing/Tool-js/email.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></code></pre><p>会有一定延迟</p><h4 id="hex-sha1-v2"><a class="header-anchor" href="#hex-sha1-v2">¶</a>hex_sha1</h4><pre><code class="highlight JavaScript"><span class="title class_">Email</span>.<span class="title function_">send</span>(&#123;<span class="title class_">Host</span>: <span class="string">&#x27;smtp.office365.com&#x27;</span>, <span class="comment">//SMTP服务器</span><span class="title class_">Username</span>: <span class="string">&#x27;yt-stmp@outlook.com&#x27;</span>, <span class="comment">//登录用户</span><span class="title class_">Password</span>: <span class="string">&#x27;YT20211101&#x27;</span>, <span class="comment">//密码（部分为授权码）</span><span class="title class_">To</span>: <span class="title function_">getQueryVariable</span>(<span class="string">&#x27;email&#x27;</span>, <span class="string">&#x27;&#x27;</span>), <span class="comment">//收件人</span><span class="title class_">From</span>: <span class="string">&#x27;yt-stmp@outlook.com&#x27;</span>, <span class="comment">//发件人</span><span class="title class_">Subject</span>: <span class="string">&#x27;  &#x27;</span>,  <span class="comment">//邮件主题</span><span class="title class_">Body</span>: txet&#125;).<span class="title function_">then</span>(<span class="comment">// 发送后</span>)</code></pre><p>js发邮件</p><h3 id="email-js-v2"><a class="header-anchor" href="#email-js-v2">¶</a>email.js</h3><pre><code class="highlight HTML"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/Fgaoxing/Tool-js/ip.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></code></pre><p>会有一定延迟</p><h4 id="SetEmail"><a class="header-anchor" href="#SetEmail">¶</a>SetEmail</h4><pre><code class="highlight JavaScript"><span class="title class_">SetEmail</span>(email)</code></pre><p>设置email，方便联系你</p><h4 id="OutIp"><a class="header-anchor" href="#OutIp">¶</a>OutIp</h4><pre><code class="highlight JavaScript"><span class="title class_">OutIp</span>(ip)</code></pre><p>拦截指定IP，可以反复使用，对方可以向你发邮件（已设置email的话）</p>]]></content>
    
    
    <summary type="html">这不是Node.js包！ 这是个javascript的小工具？ {% ghcard Fgaoxing/Tool-js %} 用法 tool.js &amp;lt;script src=&amp;quot;https://cdn.jsdelivr.net/gh/Fgaoxing/Tool-js/tool.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  会有一定延迟 getQueryVariable get...</summary>
    
    
    
    <category term="技术" scheme="https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="tool.js" scheme="https://www.yt-blog.top/tags/tool-js/"/>
    
    <category term="js" scheme="https://www.yt-blog.top/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>双摄像头</title>
    <link href="https://www.yt-blog.top/20220406/0000/"/>
    <id>https://www.yt-blog.top/20220406/0000/</id>
    <published>2022-04-06T00:00:00.000Z</published>
    <updated>2024-04-20T09:01:09.138Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://bu.dusays.com/2022/04/06/13cfa5c2f39aa.png" width="100px" height="100px"></img></p><h2 id="前言"><a class="header-anchor" href="#前言">¶</a>前言</h2><p>学校要求上网课开摄像头，关键是前后各一个，我就只有有一个设备所以就要这样</p><h2 id="需求"><a class="header-anchor" href="#需求">¶</a>需求</h2><blockquote><p>Win电脑</p></blockquote><h2 id="方法"><a class="header-anchor" href="#方法">¶</a>方法</h2><h3 id="OBS"><a class="header-anchor" href="#OBS">¶</a>OBS</h3><p><a href="https://obsproject.com/zh-cn/download">下载 | OBS</a><br /><a href="https://obsproject.com/forum/resources/obs-virtualcam.949/">下载OBS Virtualcam插件</a><br />选择1/4个摄像头<br />打开OBS</p><p><img src="https://bu.dusays.com/2022/04/06/154492e6089f3.png" alt="https://bu.dusays.com/2022/04/06/154492e6089f3.png" /><br />左右摆放<br /><img src="https://bu.dusays.com/2022/04/06/cdcf1c6dec957.png" alt="cdcf1c6dec957.png (1982×1120) (dusays.com)" /><br />然后选择这个摄像头<br /><img src="https://bu.dusays.com/2022/03/29/97d19de19e0c5.png" alt="https://bu.dusays.com/2022/03/29/97d19de19e0c5.png" /></p><h2 id="注意"><a class="header-anchor" href="#注意">¶</a>注意</h2><p>使用时请保证电脑性能，且电脑摄像头没有占用。</p><blockquote><p>本教程仅支持Windows，这是OBS Virtualcam的原因。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://bu.dusays.com/2022/04/06/13cfa5c2f39aa.png&quot; width=&quot;100px&quot; height=&quot;100px&quot;&gt;&lt;/img&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a class=&quot;header-anchor</summary>
      
    
    
    
    <category term="网课生活" scheme="https://www.yt-blog.top/categories/%E7%BD%91%E8%AF%BE%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="网课" scheme="https://www.yt-blog.top/tags/%E7%BD%91%E8%AF%BE/"/>
    
    <category term="虚拟" scheme="https://www.yt-blog.top/tags/%E8%99%9A%E6%8B%9F/"/>
    
    <category term="OBS" scheme="https://www.yt-blog.top/tags/OBS/"/>
    
  </entry>
  
  <entry>
    <title>虚拟的我</title>
    <link href="https://www.yt-blog.top/19398/"/>
    <id>https://www.yt-blog.top/19398/</id>
    <published>2022-03-29T00:00:00.000Z</published>
    <updated>2024-01-19T01:28:22.792Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">¶</a>前言</h2><p>小课也要开摄像头，所以我就借鉴了一下<a href="https://zh.moegirl.org.cn/%E8%99%9A%E6%8B%9FUP%E4%B8%BB">VUP</a>技术,然后我就变成了这样<img src="https://cdn2.chuqis.com/gh/fgaoxing/myimg/webp/%E8%99%9A%E6%8B%9F%E7%9A%84%E6%88%91.webp" alt="https://cdn2.chuqis.com/gh/fgaoxing/myimg/webp/虚拟的我.webp" /></p><h2 id="需求"><a class="header-anchor" href="#需求">¶</a>需求</h2><blockquote><p>Win电脑</p></blockquote><h2 id="方法"><a class="header-anchor" href="#方法">¶</a>方法</h2><h3 id="AcFun"><a class="header-anchor" href="#AcFun">¶</a>AcFun</h3><p>下载<a href="https://cdn.aixifan.com/downloads/AcFunVirtualTool_sign_1.27.0.1302_78ab87.exe">AcFun面部助手</a><br />然后登录/注册账户<br />上传模型，或点击拼脸<br />相关可参考<br /><a href="https://www.acfun.cn/v/ac30907800">【新手向】面捕开播教程！保姆级～超详细视频演示～</a></p><p><a href="https://www.acfun.cn/a/ac30917342">AcFun面捕助手用户Q&amp;A手册</a></p><h3 id="OBS"><a class="header-anchor" href="#OBS">¶</a>OBS</h3><p><a href="https://obsproject.com/zh-cn/download">下载 | OBS</a><br /><a href="https://obsproject.com/forum/resources/obs-virtualcam.949/">下载OBS Virtualcam插件</a><br />选择1/4个摄像头<br />打开OBS<br /><img src="https://bu.dusays.com/2022/03/29/25ddf7c9c3a3d.png" alt="https://bu.dusays.com/2022/03/29/25ddf7c9c3a3d.png" /><br /><img src="https://bu.dusays.com/2022/03/29/ff0dfb557d332.png" alt="https://bu.dusays.com/2022/03/29/ff0dfb557d332.png" /><br />然后选择这个摄像头<br /><img src="https://bu.dusays.com/2022/03/29/97d19de19e0c5.png" alt="https://bu.dusays.com/2022/03/29/97d19de19e0c5.png" /></p><h2 id="注意"><a class="header-anchor" href="#注意">¶</a>注意</h2><p>使用时请保证电脑性能，且电脑摄像头没有占用。<br />不然（<s>我这是开了省电模式</s>）<br /><img src="https://bu.dusays.com/2022/03/29/879d7555b6bfd.png" alt="https://bu.dusays.com/2022/03/29/879d7555b6bfd.png" /><br />窗口不会，但是挂件会有影响</p><blockquote><p>本教程仅支持Windows，这是AcFun的原因。</p></blockquote>]]></content>
    
    
    <summary type="html">前言 小课也要开摄像头，所以我就借鉴了一下VUP技术,然后我就变成了这样 需求  Win电脑  方法 AcFun 下载AcFun面部助手 然后登录/注册账户 上传模型，或点击拼脸 相关可参考 【新手向】面捕开播教程！保姆级～超详细视频演示～ AcFun面捕助手用户Q&amp;amp;A手册 OBS 下载 | OBS 下载OBS Virtualcam插件 选择1/4个摄像头 打开OBS   然后选择这个摄像...</summary>
    
    
    
    <category term="网课生活" scheme="https://www.yt-blog.top/categories/%E7%BD%91%E8%AF%BE%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="网课" scheme="https://www.yt-blog.top/tags/%E7%BD%91%E8%AF%BE/"/>
    
    <category term="虚拟" scheme="https://www.yt-blog.top/tags/%E8%99%9A%E6%8B%9F/"/>
    
    <category term="OBS" scheme="https://www.yt-blog.top/tags/OBS/"/>
    
  </entry>
  
  <entry>
    <title>Win11正式版安装安卓软件(不需要第三方虚拟机)</title>
    <link href="https://www.yt-blog.top/48618/"/>
    <id>https://www.yt-blog.top/48618/</id>
    <published>2022-03-17T08:17:00.000Z</published>
    <updated>2024-01-19T01:41:24.044Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备工具"><a class="header-anchor" href="#准备工具">¶</a>准备工具</h3><blockquote><ol><li>Win11电脑一台</li><li>一双手</li></ol></blockquote><h3 id="安装安卓"><a class="header-anchor" href="#安装安卓">¶</a>安装安卓</h3><p>首先我们先打开设置<br />时间和地区&gt;语言和区域</p><p><img src="https://bu.dusays.com/2022/03/17/e7953f402f157.png" alt="https://bu.dusays.com/2022/03/17/e7953f402f157.png" /><br />黄色区域调整成美国<br />然后下载安卓</p><span class='btn'><a class="button" href='https://apps.microsoft.com/detail/9P3395VX91NR?hl=zh-cn&gl=US' title='下载安卓'><i class='fas fa-download'></i>下载安卓</a></span><p>点击GET，跳转到应用商店一路下一步，安装后显示需要重启<br />点重启即可</p><p>重启后切换回中国地区</p><h3 id="安装ADB"><a class="header-anchor" href="#安装ADB">¶</a>安装ADB</h3><span class='btn'><a class="button" href='https://dl.google.com/android/repository/platform-tools_r33.0.0-windows.zip' title='下载ABD'><i class='fas fa-download'></i>下载ABD</a></span><p>解压到任意地方<br />然后在地址栏输入 <code>cmd</code> 回车<br /><img src="https://bu.dusays.com/2022/03/17/a1bc42b081b95.png" alt="https://bu.dusays.com/2022/03/17/a1bc42b081b95.png" /><br />打开 <code>适用于Android™ 的Windows 子系统设置 </code><br /><img src="https://bu.dusays.com/2022/03/17/5ad514c392a3a.png" alt="https://bu.dusays.com/2022/03/17/5ad514c392a3a.png" /><br />打开开发者模式<br /><img src="https://bu.dusays.com/2022/03/17/351815faeff80.png" alt="https://bu.dusays.com/2022/03/17/351815faeff80.png" /><br />记下画横线的部分<br />在cmd里输入 <code>adb connect</code>+空格+你刚才记下的，横线的那部分<br />回车，重复输入直到出现 <code>already connected...</code></p><h3 id="安装安卓应用"><a class="header-anchor" href="#安装安卓应用">¶</a>安装安卓应用</h3><p>然后输入 <code>adb install</code>+空格+APK路径，回车等待出现 <code>Success</code><br />在开始中打开即可看到软件</p><h4 id="提示"><a class="header-anchor" href="#提示">¶</a>提示</h4><p>部分软件可能会这样</p><p><img src="https://bu.dusays.com/2022/03/17/46ba4eb140edd.png" alt="https://bu.dusays.com/2022/03/17/46ba4eb140edd.png" /></p><h3 id="报错"><a class="header-anchor" href="#报错">¶</a>报错</h3><p>如出现不支持虚拟化，则需要开启 VT 并关闭其他虚拟软件！重启即可</p><h3 id="福利壁纸"><a class="header-anchor" href="#福利壁纸">¶</a>福利壁纸</h3><p><img src="https://bu.dusays.com/2022/03/19/72b519011d458.jpg" alt="https://bu.dusays.com/2022/03/19/72b519011d458.jpg" title="来自 P站 " /></p>]]></content>
    
    
    <summary type="html">准备工具   Win11电脑一台 一双手   安装安卓 首先我们先打开设置 时间和地区&amp;gt;语言和区域  黄色区域调整成美国 然后下载安卓 {% btn solid center large::下载安卓::https://apps.microsoft.com/detail/9P3395VX91NR?hl=zh-cn&amp;amp;gl=US::fas fa-download %} 点击GET，跳转到应...</summary>
    
    
    
    <category term="Win11" scheme="https://www.yt-blog.top/categories/Win11/"/>
    
    
    <category term="Win11" scheme="https://www.yt-blog.top/tags/Win11/"/>
    
    <category term="安卓11" scheme="https://www.yt-blog.top/tags/%E5%AE%89%E5%8D%9311/"/>
    
  </entry>
  
</feed>
