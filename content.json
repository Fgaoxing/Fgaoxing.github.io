{"meta":{"title":"Fgaoxing","subtitle":"个人博客","description":"Fgaoxing的blog,Fgaoxing的博客","author":"Fgaoxing","url":"https://www.yt-blog.top","root":"/"},"pages":[{"title":"","date":"2023-06-22T09:37:58.477Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"404.html","permalink":"https://www.yt-blog.top/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"","date":"2023-06-22T09:37:58.477Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"sw.js","permalink":"https://www.yt-blog.top/sw.js","excerpt":"","text":"const handle=async e=>fetch(e);self.addEventListener(\"fetch\",(async e=>{e.respondWith(handle(e.request))}));"},{"title":"关于","date":"2023-06-22T09:37:58.477Z","updated":"2023-03-12T13:13:35.000Z","comments":true,"path":"about/index.html","permalink":"https://www.yt-blog.top/about/index.html","excerpt":"","text":"使用了 hexo 作为框架，主题是 Jian 声明 发表言论要以友爱为前提！ 不要讨论游戏，和违法言论 禁止在评论骂人 博客封面图片通常来源于网络 本人 男 极少上线几乎每天上线！ 年龄：12｜初二（54学制） 星座：水瓶座 属牛 斗罗粉丝一枚 8项价值观政治测试 -民主社会主义 喜好 编程 唱歌 联系方式 邮箱: admin@yt-blog.top","author":"懵懂的初一少年"},{"title":"所有分类","date":"2023-06-22T09:37:58.477Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"categories/index.html","permalink":"https://www.yt-blog.top/categories/index.html","excerpt":"","text":""},{"title":"title","date":"2023-06-22T09:37:58.477Z","updated":"2022-07-10T14:02:21.000Z","comments":true,"path":"dev/index.html","permalink":"https://www.yt-blog.top/dev/index.html","excerpt":"","text":"Jian.load.js(\"https://unpkg.com/pandown\", pandown) 对不起，pandown-tags不支持自定义Sorry, pandown-tags does not support customization"},{"title":"文档","date":"2022-12-02T14:03:43.000Z","updated":"2022-12-06T14:02:02.000Z","comments":true,"path":"docs/index.html","permalink":"https://www.yt-blog.top/docs/index.html","excerpt":"","text":"这里是本站存储的文档！！ vls-pandown-tags simplest-server"},{"title":"我的朋友们","date":"2023-06-22T09:37:58.477Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"friends/index.html","permalink":"https://www.yt-blog.top/friends/index.html","excerpt":"","text":"!!!请注意不要违反友链规则和声明 我的友链（会变） 名称：动荡の初二少年 简介：一个少年的博客 链接：https://www.yt-blog.top/ LOGO： 中杯：https://unpkg.com/ytblogimg/webp/logo.webp 大杯：https://unpkg.com/ytblogimg/webp/big_logo.webp 超大杯：https://unpkg.com/ytblogimg/webp/so_big_logo.webp SVG: https://unpkg.com/ytblogimg/svg/svg_logo.svg (不建议使用)"},{"title":"RSA公钥","date":"2022-12-24T21:52:34.000Z","updated":"2022-12-24T22:13:26.000Z","comments":true,"path":"rsa/index.html","permalink":"https://www.yt-blog.top/rsa/index.html","excerpt":"","text":"RSA是非对称加密技术。公钥加密，只有私钥才可以解开。私钥加密，只有公钥才可以解开。 您的加密，只有我可以解开！！同时，这里使用4096位的密钥，无法被暴力破解。这是我的RSA公钥，如需验证身份或者需要加密如我通信可以用： -----BEGIN RSA PUBLIC KEY----- MIICCgKCAgEAnS6GaCHcW7jFMRAbooXAJe1Q0j8bc32HZBk7YyHZIxxzd/2p5XVe 6H6uSBh2tJdAI+7P6jZGELNYir7QgL88twZJ7H4z4shuXDy5IJw3dh4u5Cx0How3 MPapp0sIRIVH2xUHMw+skCZzp8Fruki3mkQJ4zVA+4Ty97lNq98+ciqZ9e2oPVOK jdSzDPzooJT+R4jj3z+fWjnbWygn8rAE2T+uau8GLGcF25htmtvXg52zM8BkRYaW Ljmq8UuGkAiotPIqVK4xNRad7G7iCW5OgUKTYTK08qcEIUAdqSGqw9TE22nVmm4p z9jR0TbPPfOwe2HXkZvvB3LDEiw89CDYcSJqjE3JqqDkzeS1qMA+uPH6tpMfajnP GjiJ8l2J+Mv8WsDQ2jDf1eEzbz2xgL5KVr96I+5/l+Kc+VcjiSseOnpmZV+PYUMc BZbqUo8/Dy2UGKXD9k127mlsKKCPeVeXmtregZIEnphyXqpDn8m+J66PfcGFNWel lsvdVO5SF5fu2Rmu160HJuoStcR8HEsrDS1TmeEHgHjN7gc/U6uOscy3fT9WHcql brbZyivhhexWg7mEdMYys0eoJVuQL654r+dA32Ccxm8NFaR89H8lcwlI+X5PSXde am/a9S+FiF+svGIN6H92rXT48VnjHlwxgcktBgSXry+/H4+EG+gENiMCAwEAAQ== -----END RSA PUBLIC KEY-----"},{"title":"碎语","date":"2023-06-22T09:37:58.477Z","updated":"2022-08-31T00:18:12.000Z","comments":true,"path":"say/index.html","permalink":"https://www.yt-blog.top/say/index.html","excerpt":"","text":"加载不出来刷新一下 showQexoTalks(\"qexot\", \"https://admin.yt-blog.top\", 10)"},{"title":"所有标签","date":"2023-06-22T09:37:58.477Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"tags/index.html","permalink":"https://www.yt-blog.top/tags/index.html","excerpt":"","text":""},{"title":"时间轴","date":"2023-06-22T09:37:58.477Z","updated":"2023-03-12T13:09:49.000Z","comments":true,"path":"timeline/index.html","permalink":"https://www.yt-blog.top/timeline/index.html","excerpt":"","text":""},{"title":"暂停更新公告","date":"2023-06-22T09:37:58.477Z","updated":"2023-03-18T06:05:52.000Z","comments":true,"path":"暂停更新/index.html","permalink":"https://www.yt-blog.top/%E6%9A%82%E5%81%9C%E6%9B%B4%E6%96%B0/index.html","excerpt":"","text":"2021-12-20:由于电脑坏了，返厂了，所以暂时不会更新，抱歉各位。😭"},{"title":"Simplest Server 文档","date":"2022-12-02T13:58:18.000Z","updated":"2022-12-02T21:10:43.000Z","comments":true,"path":"docs/simplest-server/index.html","permalink":"https://www.yt-blog.top/docs/simplest-server/index.html","excerpt":"","text":"介绍 GitHubsimplest-server NPMsimplest-server LGPLLicense simplest-server是一个基于http的node服务器框架，你可以使用路径表来指定路径，可以使用较少的代码和简单地方法来编写nodejs的服务端和无服务器函数，并且支持vercel和netlify等部署网站。 开始使用"},{"title":"pandown","date":"2022-07-10T15:02:54.000Z","updated":"2022-07-13T13:33:48.000Z","comments":true,"path":"docs/vls-pandown-tags/index.html","permalink":"https://www.yt-blog.top/docs/vls-pandown-tags/index.html","excerpt":"","text":"温馨提示请先检查主题版本在阅读 在此查看pr前后：增加tag:pandown.js PR后的版本PR前的版本请使用 &#123;% pandown type::url::pwd::fname %&#125;下载该文件：Jian.load.js(“https://unpkg.com/pandown”, pandown) 下载后解压，把文件放到volantis/scripts/tags 然后即可按照pr后的操作使用 参数 type url pwd fname 网盘类型 网盘链接 提取码 文件名 type参数选项 没有的话可以空着(type为github时空) 随意 type参数选项 网盘名 选项 百度网盘 baidu 腾讯微云 tx onedrive onedrive 和彩云 hc 天翼云 ty 阿里网盘 aliyun 115网盘 115 坚果云 jg 360安全云盘 360 123网盘 123 七牛云 qn Github(呵呵呵) github 蓝奏云 lz 自定义 不支持"},{"title":"友链规则和声明","date":"2022-12-06T14:08:05.000Z","updated":"2023-06-22T09:37:58.477Z","comments":false,"path":"ua/links/index.html","permalink":"https://www.yt-blog.top/ua/links/index.html","excerpt":"","text":"规定 1.友链不得违反中华人民共和国的法律法规，不得违反道德 2.80%以上的原创内容，且有2个月的运行，不会说跑路就跑路 3.文章内容不得违反法律和法规，不得包含违法犯罪言论，不得危害他人利益或制造恐慌，舆论引导等。 4.不得发出有关于暴力、引战和政治的言论 5.含有过多广告，影响观感。 6.不进行单项链接（除非我同意），跑路将会在随机检测时下链 7.如在友链期间违反以上任意一条，责任由源站提供，本站不负责任。请尽快提醒我，进行下链！ 申请提示 多次反复申请将永久黑名单 不要发广告！！ 如何进行友链数据的更换暂停 更换请自行重新提交 暂停需要在评论发送原因，否则按跑路处理"},{"title":"http服务器","date":"2023-01-12T18:35:25.000Z","updated":"2023-01-12T18:35:25.000Z","comments":true,"path":"docs/simplest-server/http/index.html","permalink":"https://www.yt-blog.top/docs/simplest-server/http/index.html","excerpt":"","text":""},{"title":"快速上手","date":"2022-12-02T18:11:02.000Z","updated":"2023-01-12T18:33:24.000Z","comments":true,"path":"docs/simplest-server/start/index.html","permalink":"https://www.yt-blog.top/docs/simplest-server/start/index.html","excerpt":"","text":"执行： mkdir demo&amp;&amp;cd demo&amp;&amp;npm init&amp;&amp;npm i simplest-server 接着新建js文件,在里面输入： const ss = require(&#x27;simplest-server&#x27;); ss.http(&#123; &#x27;/&#x27;: function(req, res)&#123; res.writeHead(200, &#123; &#x27;Content-Type&#x27;: &#x27;text/html&#x27;&#125;) res.end(&#x27;&lt;h1&gt;Hello World&lt;/h1&gt;&#x27;) &#125; &#125;).listen(5000) 使用node运行，访问：http://localhost:5000/ ,你会看到 那么恭喜你，成功了！！ JSON的格式如下： &#123; &#x27;路径&#x27;:函数（function类型，否则不会允许） &#125; 上一步 下一步"}],"posts":[{"title":"CDNN再添一员","slug":"CDNN再添一员","date":"2023-05-25T13:17:04.854Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"/26824/","link":"","permalink":"https://www.yt-blog.top/26824/","excerpt":"爱写CDN的我，又写了个新的CDN，CDNN系列再添一员，目前刚上线，不是很稳定，见谅。可以加群了解详情115967669，网站：https://cdn2.chuqis.com/ ，和初七公司合作的【不是广告】 目前单文件最大30M，以后会开放付费的50M和100M，自己的回源，不依赖JSD","text":"爱写CDN的我，又写了个新的CDN，CDNN系列再添一员，目前刚上线，不是很稳定，见谅。可以加群了解详情115967669，网站：https://cdn2.chuqis.com/ ，和初七公司合作的【不是广告】 目前单文件最大30M，以后会开放付费的50M和100M，自己的回源，不依赖JSD","categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://www.yt-blog.top/tags/python/"},{"name":"cdn","slug":"cdn","permalink":"https://www.yt-blog.top/tags/cdn/"}]},{"title":"懒加载的妙用：缓存篇","slug":"懒加载的妙用：缓存篇","date":"2023-05-07T00:37:05.666Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"/49152/","link":"","permalink":"https://www.yt-blog.top/49152/","excerpt":"很多网站都用了一项技术：懒加载(Lazyload) 用于增加速度，减少请求量，尽管如此每次查看图片还是需要等待他加载完，这很耗时间，如下 但是如果先呈现，后加载，不就可以了吗。 这时候就有人跳出来了， 开什么玩笑呢，不加载，怎么呈现？ 问得好，其实很简单，我只要把图片存在用户电脑就行了，问题在于怎么存，如果要是使用SW，一旦写错，基本上网站就废了，所以这个不考虑，但是SW但来了一个东西，没...","text":"很多网站都用了一项技术：懒加载(Lazyload) 用于增加速度，减少请求量，尽管如此每次查看图片还是需要等待他加载完，这很耗时间，如下 但是如果先呈现，后加载，不就可以了吗。 这时候就有人跳出来了， 开什么玩笑呢，不加载，怎么呈现？ 问得好，其实很简单，我只要把图片存在用户电脑就行了，问题在于怎么存，如果要是使用SW，一旦写错，基本上网站就废了，所以这个不考虑，但是SW但来了一个东西，没错就是Cache，它可以缓存请求，当然也可以存储数据，其实可以直接存储二进制，不过我还是转换成base64存储，由于比较复杂，我就不展示了， 你访问本网站就可以感受到，代码后续放出来","categories":[],"tags":[{"name":"次回加载","slug":"次回加载","permalink":"https://www.yt-blog.top/tags/%E6%AC%A1%E5%9B%9E%E5%8A%A0%E8%BD%BD/"},{"name":"Lazyload","slug":"Lazyload","permalink":"https://www.yt-blog.top/tags/Lazyload/"},{"name":"Cache","slug":"Cache","permalink":"https://www.yt-blog.top/tags/Cache/"},{"name":"自主缓存","slug":"自主缓存","permalink":"https://www.yt-blog.top/tags/%E8%87%AA%E4%B8%BB%E7%BC%93%E5%AD%98/"},{"name":"网站加速","slug":"网站加速","permalink":"https://www.yt-blog.top/tags/%E7%BD%91%E7%AB%99%E5%8A%A0%E9%80%9F/"}]},{"title":"FastJump.js","slug":"FastJump.js","date":"2023-03-17T08:29:45.000Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"/64234/","link":"","permalink":"https://www.yt-blog.top/64234/","excerpt":"","text":"110行写了个小玩意，可以像sw那样离线缓存，和Pjax类似，不过用了自主缓存，fetch做请求，算了上代码吧： self.CACHE_NAME = &#x27;FastJumpCache&#x27;; // 默认的存储名称 self.db = &#123; read: (key) =&gt; &#123; return new Promise((resolve, reject) =&gt; &#123; caches.match(new Request(`https://LOCALCACHE/$&#123;encodeURIComponent(key)&#125;`)).then(function (res) &#123; res.text().then(text =&gt; resolve(text)); &#125;).catch(() =&gt; &#123; resolve(null); &#125;); &#125;) &#125;, write: (key, value) =&gt; &#123; return new Promise((resolve, reject) =&gt; &#123; caches.open(CACHE_NAME).then(function (cache) &#123; cache.put(new Request(`https://LOCALCACHE/$&#123;encodeURIComponent(key)&#125;`), new Response(value)); resolve(); &#125;).catch(() =&gt; &#123; reject(); &#125;); &#125;); &#125; &#125; document.addEventListener(&#x27;DOMContentLoaded&#x27;, function () &#123; self.db.read(window.location.href).then(function (d) &#123; if (!d) &#123; fetch(window.location.href).then(function (d) &#123; if (d.headers.get(&#x27;content-type&#x27;) === &#x27;text/html&#x27;) &#123; d.text().then(function (b) &#123; self.db.write(window.location.href, b) &#125;) &#125; &#125;) &#125; &#125;); &#125;); document.addEventListener(&#x27;DOMContentLoaded&#x27;, function () &#123; setInterval(function () &#123; var doms = document.querySelectorAll(&#x27;a[href]&#x27;); Array.prototype.forEach.call(doms, function (dom) &#123; if (dom.href &amp;&amp; dom.href.indexOf(window.location.origin) === 0) &#123; dom.onclick = function () &#123; history.pushState(&#123;&#125;, &#x27;&#x27;, dom.href); self.db.read(dom.href).then(function (d) &#123; if (d) &#123; console.clear(); document.open(); try &#123; document.write(d); let Event_timerun = window.setInterval(function () &#123; if (document.body&amp;&amp;document.body.innerHTML) &#123; let Event = new CustomEvent(&#x27;onload&#x27;) document.dispatchEvent(Event); window.dispatchEvent(Event); Event = new CustomEvent(&#x27;DOMContentLoaded&#x27;) document.dispatchEvent(Event); window.dispatchEvent(Event); window.clearInterval(Event_timerun) &#125; &#125;,500) fetch(dom.href).then(function (d) &#123; if (d.headers.get(&#x27;content-type&#x27;) === &#x27;text/html&#x27;) &#123; d.text().then(function (b) &#123; self.db.write(window.location.href, b) &#125;) &#125; &#125;) &#125; catch (e) &#123; &#125; &#125; else &#123; fetch(dom.href).then(function (d) &#123; if (d.headers.get(&#x27;content-type&#x27;) === &#x27;text/html&#x27;) &#123; d.text().then(function (b) &#123; console.clear(); document.open(); try &#123; document.write(b) let Event_timerun = window.setInterval(function () &#123; if (document.body&amp;&amp;document.body.innerHTML) &#123; let Event = new CustomEvent(&#x27;onload&#x27;) document.dispatchEvent(Event); window.dispatchEvent(Event); Event = new CustomEvent(&#x27;DOMContentLoaded&#x27;) document.dispatchEvent(Event); window.dispatchEvent(Event); window.clearInterval(Event_timerun) &#125; &#125;,500) &#125; catch (e) &#123; &#125; self.db.write(dom.href, b) &#125;).catch(function (e) &#123; window.location.href = dom.href &#125;) &#125; &#125;).catch(function (e) &#123; window.location.href = dom.href &#125;) &#125; &#125;).catch(function (e) &#123; window.location.href = dom.href &#125;) return false; &#125; &#125; &#125;); &#125;, 500) &#125;); 注意不能与Pjax一起使用！！ 鄙人水平有限，请斧正 有不少Bug，仅供测试，不可以在线上环境使用","categories":[],"tags":[]},{"title":"BiliBili崩了","slug":"BiliBili崩了","date":"2023-03-05T20:48:16.000Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"/47626/","link":"","permalink":"https://www.yt-blog.top/47626/","excerpt":"","text":"这是唯一一次我在看视频的时候崩的，这回着就是你在点开视频的时候就会： ，水文一篇，等待BiliBili解析一下这次故障","categories":[],"tags":[]},{"title":"New Bing免代理申请和使用","slug":"New Bing免代理申请和使用","date":"2023-02-15T20:54:15.000Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"/52329/","link":"","permalink":"https://www.yt-blog.top/52329/","excerpt":"","text":"已失效 大家都知道哈，前段时间，有个AI叫ChatGPT，很火，所有人都在说。不过据说好像现在收费了，OpenAI么，懂得都懂，先免费，再收费，像是DALL·E、Copilot都是。但是因为国内不能访问，所以就没用上…… 现在又搞出来newBing（后面估计会收费，为了AI，都给服务器干崩了），不过国内还是不让用，这时候就需要一些合法手段来访问。 教程 其实很简单 申请 如果直接访问https://www.bing.com/new，百分百不行，咋办，他是按照国家的，所以我们只要去国外就行了伪装呗，多简单啊！不过咱们说了，要合法，所以用非常手段肯定不行。先要明白原理，简单来说就是IP定位，那么我们就伪装IP IP获取有好几种方式，比如用网路发送数据的IP，这样就需要用到代理（代理是合法的，但是麻烦），另一种是通过Header中的x-forwarded-for字段获取。这主要看bing的方式，他用的是后者，我们操作一下。所以我们需要改头，这个简单。 首先去下载一个插件，如果有类似插件，可以不用下载，这里只用 Header Editor举例 官网下载页：开始 | Header Editor (firefoxcn.net) 安装好，打开它 加号添加，按照图片配置好保存即可 名称随意，如果不会，就按照图片填写即可 访问必应 (bing.com)，不跳转cn.就说明成功了 选择美国 然后访问必应 (bing.com)，点击加入即可，等待邮件，大概两三天 然后恭喜，你就有了NewBing 其实平时用国外ip访问bing也可以减少广告，增加更多搜索内容 最后只要按照上面的操作，再来一遍，然后在搜索框输入内容即可开始问答，按照网上的提示，可以调教，但是我没试过。不要滥用，会被封。 Bing可能要超过谷歌了！","categories":[],"tags":[{"name":"AI","slug":"AI","permalink":"https://www.yt-blog.top/tags/AI/"},{"name":"New Bing","slug":"New-Bing","permalink":"https://www.yt-blog.top/tags/New-Bing/"},{"name":"ChatGPT","slug":"ChatGPT","permalink":"https://www.yt-blog.top/tags/ChatGPT/"},{"name":"OpenAI","slug":"OpenAI","permalink":"https://www.yt-blog.top/tags/OpenAI/"}],"author":"动荡的初二少年"},{"title":"simplest-server","slug":"simplest-server","date":"2023-01-10T10:24:59.000Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"/51672/","link":"","permalink":"https://www.yt-blog.top/51672/","excerpt":"","text":"前情 给各位道个歉，好久没更新了 给大家带来一个好东西 众所周知，我会node.js 但是把，我一开始就选择了http库（就是原生库） 所以用express就会不太顺手 但是原生的http又没啥东西，就很难受几乎什么都要自己写，包括cookie的操作 所以我就基于原生的http包写了一个框架，使用路由的方式，可以使用无服务器函数 GitHubsimplest-server NPMsimplest-server LGPLLicense 有关包的一些东西 目前由JS编写使用CJS引入，后续可能会迁移到Ts 这个NPM包目前是测试版，但基础功能已经OK了 你可以这样引入 const ss = require(&#x27;simplest-server&#x27;); 目前包含如下函数 const ss = require(&#x27;simplest-server&#x27;); ss.http # http服务 ss.maps # 本地文件映射 ss.map # 本地文件映射 ss.ejs # 集成的EJS ss.err # 返回报错页面 更多文档看Simplest Server 文档（大概率没写完，所以只能等） 关于https 目前不支持，后续加入","categories":[{"name":"技术","slug":"技术","permalink":"https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Node.js","slug":"Node-js","permalink":"https://www.yt-blog.top/tags/Node-js/"},{"name":"simplest-server","slug":"simplest-server","permalink":"https://www.yt-blog.top/tags/simplest-server/"}],"author":"懵懂的初一少年"},{"title":"Python实现文件查重","slug":"Python实现文件查重","date":"2022-10-07T12:22:03.000Z","updated":"2022-10-14T16:48:06.000Z","comments":true,"path":"/58785/","link":"","permalink":"https://www.yt-blog.top/58785/","excerpt":"","text":"同时支持文件查重，空文件夹查找，大文件查找等，后续还将不断更新！！ 开发原因 其实是看视频，看到wechat分享文件会存储多份，浪费空间，而且你还找不到 安装 pip install find-same-md5-file 使用方法 本次发布仅面向开发者！！ Fgaoxing/find-same-file: Python searches the same file based on md5 (github.com) PYPI import find_same_md5_file # 寻找相同文件，第一个参数是路径后面需要加/ print(find_same_md5_file.print_same(&#x27;C:/&#x27;)) # 寻找空文件夹，第一个参数是路径后面需要加/ print(find_same_md5_file.find_empty_dir(&#x27;C:/&#x27;)) # 查找大文件 第一个参数是路径后面需要加/，第二个参数是大小单位是字节 print(find_same_md5_file.find_big_file(&#x27;U:/&#x27;, 3685)) 提示！！！！ 如果路径不存在会报错TypeError，后续版本修复。 1.0.0之前的版本均为测是版本，函数名有变动可能。 建议使用PYPI版本，而不是Github版本，Github更新不及时。 图形化界面 目前还在开发，由玄云海的承担 （我也在，官网我写的有点操，将就着看）","categories":[{"name":"技术","slug":"技术","permalink":"https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.yt-blog.top/tags/python/"}],"author":"懵懂的初一少年"},{"title":"放开想，越离谱越好","slug":"放开想，越离谱越好","date":"2022-07-27T22:44:53.000Z","updated":"2023-02-18T23:55:51.000Z","comments":true,"path":"20220727/2244/放开想，越离谱越好/","link":"","permalink":"https://www.yt-blog.top/20220727/2244/%E6%94%BE%E5%BC%80%E6%83%B3%EF%BC%8C%E8%B6%8A%E7%A6%BB%E8%B0%B1%E8%B6%8A%E5%A5%BD/","excerpt":"","text":"本文是吹神求杀的QQ聊天截屏 用时1小时15分","categories":[],"tags":[{"name":"话题","slug":"话题","permalink":"https://www.yt-blog.top/tags/%E8%AF%9D%E9%A2%98/"}],"author":"懵懂的初一少年"},{"title":"2022 夏季应用推荐","slug":"2022 夏季应用推荐","date":"2022-07-24T17:00:49.000Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"/57865/","link":"","permalink":"https://www.yt-blog.top/57865/","excerpt":"","text":"声明 我没收钱，不排名！！！！ 无广告，无病毒，很干净！！！ 正文 Lively Wallpaper 由于目前仅支持Microsoft Store，所以只限于Win8.1以上 Lively Wallpaper - Microsoft Store 应用程序 效果很不错，可以用网页，如果需要背景的网页我可以出一期 酷呆桌面 一个在GitHub开源的桌面整理软件软件：https://www.coodesker.com/ Windows超级管理器 非常好用的工具箱 官网：科利特尔Collithel - Windows超级管理器系列 NDM 汉化版，免费用 Jian.load.js(\"https://unpkg.com/pandown\", pandown)","categories":[{"name":"应用推荐","slug":"应用推荐","permalink":"https://www.yt-blog.top/categories/%E5%BA%94%E7%94%A8%E6%8E%A8%E8%8D%90/"}],"tags":[{"name":"应用推荐","slug":"应用推荐","permalink":"https://www.yt-blog.top/tags/%E5%BA%94%E7%94%A8%E6%8E%A8%E8%8D%90/"},{"name":"2022","slug":"2022","permalink":"https://www.yt-blog.top/tags/2022/"}]},{"title":"cdnn，jsdelivr的代替方案","slug":"cdnn，jsdelivr的代替方案","date":"2022-06-24T19:36:45.000Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"20220624/1936/cdnn，jsdelivr的代替方案/","link":"","permalink":"https://www.yt-blog.top/20220624/1936/cdnn%EF%BC%8Cjsdelivr%E7%9A%84%E4%BB%A3%E6%9B%BF%E6%96%B9%E6%A1%88/","excerpt":"在这里说一声抱歉，好久没更新了。 大家知道之前jsdelivr中国区无法访问（已恢复） 然后我写了这个叫CDNN的玩意","text":"在这里说一声抱歉，好久没更新了。 大家知道之前jsdelivr中国区无法访问（已恢复） 然后我写了这个叫CDNN的玩意 注意 支持npm和图片 github地址：https://website.com/gh/:owner/:repo@:branch/:path 手动更新：https://website.com/api/:owner/:repo@:branch/:path NPM地址：https://website.com/npm/:owner/:repo@:branch/:path 文档 设置环境变量 appId，appKey 数据库是（必须是国际版） https://console.leancloud.app/ 新建class，gh 不要任何限制 创建参数 然后在根目录添加favicon.ico和index.html(主页代码） 请大佬 如果你是Node.js大佬请帮我优化，谢谢！ 打赏 开发不易，给点钱吧！","categories":[{"name":"技术","slug":"技术","permalink":"https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Node.js","slug":"Node-js","permalink":"https://www.yt-blog.top/tags/Node-js/"}],"author":"懵懂的初一少年"},{"title":"pandown.js","slug":"pandown.js","date":"2022-05-05T12:00:30.000Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"20220505/1200/pandown-js/","link":"","permalink":"https://www.yt-blog.top/20220505/1200/pandown-js/","excerpt":"这不是Node.js包！ 这是个javascript的小工具？ ↑↑↑和上次一样的开头↑↑↑","text":"这不是Node.js包！ 这是个javascript的小工具？ ↑↑↑和上次一样的开头↑↑↑ 前情 我们一般会使用链接但是，怎样的xx网盘链接提取码：xxxx 非常不美观所以我就写了这个 pandown() 代码 引入 &lt;script type=&quot;text/javascript&quot; src=&quot;https://unpkg.com/pandown&quot; 样例（参数看后面） &lt;pandown type=&quot;lz&quot; url=&quot;123&quot; pwd=&quot;1234&quot; fname=&quot;啥都没有，我没放链接&quot;&gt;&lt;/pandown&gt; 自动生成，但如果你的网站没有生产 可以使用： &lt;script&gt;pandown()&lt;/script&gt; 参数 type url pwd fname 网盘类型 网盘链接 提取码 文件名 type参数选项 没有的话可以空着(type为github时空) 随意 type参数选项 网盘名 选项 百度网盘 baidu 腾讯微云 tx onedrive onedrive 和彩云 hc 天翼云 ty 阿里网盘 aliyun 115网盘 115 坚果云 jg 360安全云盘 360 123网盘 123 七牛云 qn Github(呵呵呵) github 蓝奏云 lz 自定义（文档点我） yun 自定义 如果你的网盘没在上面，请使用次条 提示: 该功能下下载图标为黑色，侧边没有小条 参数 type url pwd fname name color 网盘类型 网盘链接 提取码 文件名 网盘名 主题色 必须为yun 没有的话可以空着 随意 前面要有#","categories":[{"name":"技术","slug":"技术","permalink":"https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"js","slug":"js","permalink":"https://www.yt-blog.top/tags/js/"}],"author":"懵懂的初一少年"},{"title":"Tool.js","slug":"Tool.js","date":"2022-04-30T16:09:30.000Z","updated":"2023-02-19T00:22:06.000Z","comments":true,"path":"20220430/1609/tool-js/","link":"","permalink":"https://www.yt-blog.top/20220430/1609/tool-js/","excerpt":"这不是Node.js包！ 这是个javascript的小工具？","text":"这不是Node.js包！ 这是个javascript的小工具？ 用法 tool.js &lt;script src=&quot;https://cdn.jsdelivr.net/gh/Fgaoxing/Tool-js/tool.js&quot;&gt;&lt;/script&gt; 会有一定延迟 getQueryVariable getQueryVariable(variable,err) 用于获取url参数 variable err 参数名 不存在时返回 lantern lantern() 春节小灯笼 Memorial Memorial() 国家公祭日时，网站变灰 TombSweepingDay TombSweepingDay() 清明节时，网站变灰 RestrictedPass RestrictedPass(url) url 允许跳转网址中的关键字 意味着只有允许的网址才可跳转 这里是关键字 如https://tool-js.vercel.app ,只需填写tool-js UrlChUrlChange MirrorProtection(url) head footer change out 加在url前面 加在url后面 url时候转换为Url编码(true/false) 不转换关键字，包含关键字，则会保持原有url javascript: 不会转换 并未排除当前网站链接 MirrorProtection MirrorProtection(url) url 域名(后面不要有/），如：https://github.com 可以本地访问，可以使用turn.html RestrictedPass RestrictedPass(url) url 特定字符 只允许包含特定字符的url跳转到页面 sha.js &lt;script src=&quot;https://cdn.jsdelivr.net/gh/Fgaoxing/Tool-js/tool.js&quot;&gt;&lt;/script&gt; 会有一定延迟 hex_sha1 hex_sha1(s) s 要加密的文本 对文本加密，无法解密！ email.js &lt;script src=&quot;https://cdn.jsdelivr.net/gh/Fgaoxing/Tool-js/email.js&quot;&gt;&lt;/script&gt; 会有一定延迟 hex_sha1 Email.send(&#123; Host: &#x27;smtp.office365.com&#x27;, //SMTP服务器 Username: &#x27;yt-stmp@outlook.com&#x27;, //登录用户 Password: &#x27;YT20211101&#x27;, //密码（部分为授权码） To: getQueryVariable(&#x27;email&#x27;, &#x27;&#x27;), //收件人 From: &#x27;yt-stmp@outlook.com&#x27;, //发件人 Subject: &#x27; &#x27;, //邮件主题 Body: txet &#125;).then( // 发送后 ) js发邮件 email.js &lt;script src=&quot;https://cdn.jsdelivr.net/gh/Fgaoxing/Tool-js/ip.js&quot;&gt;&lt;/script&gt; 会有一定延迟 SetEmail SetEmail(email) 设置email，方便联系你 OutIp OutIp(ip) 拦截指定IP，可以反复使用，对方可以向你发邮件（已设置email的话）","categories":[{"name":"技术","slug":"技术","permalink":"https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"tool.js","slug":"tool-js","permalink":"https://www.yt-blog.top/tags/tool-js/"},{"name":"js","slug":"js","permalink":"https://www.yt-blog.top/tags/js/"}],"author":"懵懂的初一少年"},{"title":"双摄像头","slug":"双摄像头","date":"2022-04-06T00:00:00.000Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"20220406/0000/双摄像头/","link":"","permalink":"https://www.yt-blog.top/20220406/0000/%E5%8F%8C%E6%91%84%E5%83%8F%E5%A4%B4/","excerpt":"","text":"前言 学校要求上网课开摄像头，关键是前后各一个，我就只有有一个设备所以就要这样 需求 Win电脑 方法 OBS 下载 | OBS 下载OBS Virtualcam插件 选择1/4个摄像头 打开OBS 左右摆放 然后选择这个摄像头 注意 使用时请保证电脑性能，且电脑摄像头没有占用。 本教程仅支持Windows，这是OBS Virtualcam的原因。","categories":[{"name":"网课生活","slug":"网课生活","permalink":"https://www.yt-blog.top/categories/%E7%BD%91%E8%AF%BE%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"网课","slug":"网课","permalink":"https://www.yt-blog.top/tags/%E7%BD%91%E8%AF%BE/"},{"name":"虚拟","slug":"虚拟","permalink":"https://www.yt-blog.top/tags/%E8%99%9A%E6%8B%9F/"},{"name":"OBS","slug":"OBS","permalink":"https://www.yt-blog.top/tags/OBS/"}],"author":"懵懂的初一少年"},{"title":"虚拟的我","slug":"虚拟的我","date":"2022-03-29T00:00:00.000Z","updated":"2023-02-19T00:09:04.000Z","comments":true,"path":"20220329/0000/虚拟的我/","link":"","permalink":"https://www.yt-blog.top/20220329/0000/%E8%99%9A%E6%8B%9F%E7%9A%84%E6%88%91/","excerpt":"","text":"前言 小课也要开摄像头，所以我就借鉴了一下VUP技术,然后我就变成了这样 需求 Win电脑 方法 AcFun 下载AcFun面部助手 然后登录/注册账户 上传模型，或点击拼脸 相关可参考 【新手向】面捕开播教程！保姆级～超详细视频演示～ AcFun面捕助手用户Q&amp;A手册 OBS 下载 | OBS 下载OBS Virtualcam插件 选择1/4个摄像头 打开OBS 然后选择这个摄像头 注意 使用时请保证电脑性能，且电脑摄像头没有占用。 不然（我这是开了省电模式） 窗口不会，但是挂件会有影响 本教程仅支持Windows，这是AcFun的原因。","categories":[{"name":"网课生活","slug":"网课生活","permalink":"https://www.yt-blog.top/categories/%E7%BD%91%E8%AF%BE%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"网课","slug":"网课","permalink":"https://www.yt-blog.top/tags/%E7%BD%91%E8%AF%BE/"},{"name":"虚拟","slug":"虚拟","permalink":"https://www.yt-blog.top/tags/%E8%99%9A%E6%8B%9F/"},{"name":"OBS","slug":"OBS","permalink":"https://www.yt-blog.top/tags/OBS/"}],"author":"懵懂的初一少年"},{"title":"Win11正式版安装安卓软件(不需要第三方虚拟机)","slug":"Win11正式版安装安卓软件(不需要第三方虚拟机)","date":"2022-03-17T08:17:00.000Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"20220317/0817/win11正式版安装安卓软件-不需要第三方虚拟机/","link":"","permalink":"https://www.yt-blog.top/20220317/0817/win11%E6%AD%A3%E5%BC%8F%E7%89%88%E5%AE%89%E8%A3%85%E5%AE%89%E5%8D%93%E8%BD%AF%E4%BB%B6-%E4%B8%8D%E9%9C%80%E8%A6%81%E7%AC%AC%E4%B8%89%E6%96%B9%E8%99%9A%E6%8B%9F%E6%9C%BA/","excerpt":"","text":"准备工具 Win11电脑一台 一双手 安装安卓 首先我们先打开设置 时间和地区&gt;语言和区域 黄色区域调整成美国 然后下载安卓 下载安卓 点击GET，跳转到应用商店一路下一步，安装后显示需要重启 点重启即可 重启后切换回中国地区 安装ADB 下载ABD 解压到任意地方 然后在地址栏输入cmd 回车 打开适用于Android™ 的Windows 子系统设置 打开开发者模式 记下画横线的部分 在cmd里输入adb connect+空格+你刚才记下的，横线的那部分 回车，重复输入直到出现already connected... 安装安卓应用 然后输入adb install+空格+APK路径，回车等待出现Success 在开始中打开即可看到软件 提示 部分软件可能会这样 报错 如出现不支持虚拟化，则需要开启 VT 并关闭其他虚拟软件！重启即可 福利壁纸","categories":[{"name":"Win11","slug":"Win11","permalink":"https://www.yt-blog.top/categories/Win11/"}],"tags":[{"name":"Win11","slug":"Win11","permalink":"https://www.yt-blog.top/tags/Win11/"},{"name":"安卓11","slug":"安卓11","permalink":"https://www.yt-blog.top/tags/%E5%AE%89%E5%8D%9311/"}],"author":"懵懂的初一少年"},{"title":"再见2021 你好2022","slug":"再见2021 你好2022","date":"2021-12-30T10:23:13.000Z","updated":"2023-03-12T13:21:38.000Z","comments":true,"path":"20211230/1023/再见2021-你好2022/","link":"","permalink":"https://www.yt-blog.top/20211230/1023/%E5%86%8D%E8%A7%812021-%E4%BD%A0%E5%A5%BD2022/","excerpt":"","text":"我们的生命是多么的渺小，短暂啊！ 刹那间，一年就过去了， 一眨眼，几年就过去了。 我无奈，我迷茫，前方道路一片迷雾，一眼望不到头。 原作要求已删除^ 回首这一整年，从我羡慕别人的博客，到我自己有博客，我非常开心，博客刚建立，希望在新的一年里大家多多关照。 开放了许多功能 一直沉浸在博客之中 编程猫只是偶尔看一下，不参加活动也不更新作品， 属于半退猫了 春节，包含了人们对美好明天的期待！让我们张开双臂，热烈地迎接新年的到来吧!","categories":[],"tags":[{"name":"其他","slug":"其他","permalink":"https://www.yt-blog.top/tags/%E5%85%B6%E4%BB%96/"}],"author":"动荡的初二少年"},{"title":"专注助手","slug":"专注助手","date":"2021-12-16T00:00:00.000Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"20211216/0000/专注助手/","link":"","permalink":"https://www.yt-blog.top/20211216/0000/%E4%B8%93%E6%B3%A8%E5%8A%A9%E6%89%8B/","excerpt":"","text":"专注助手： 手机点我","categories":[],"tags":[],"author":"懵懂的初一少年"},{"title":"元宇宙","slug":"元宇宙","date":"2021-12-13T12:23:43.000Z","updated":"2023-02-19T00:14:02.000Z","comments":true,"path":"20211213/1223/元宇宙/","link":"","permalink":"https://www.yt-blog.top/20211213/1223/%E5%85%83%E5%AE%87%E5%AE%99/","excerpt":"","text":"什么是元宇宙 元宇宙 （Metaverse） 是利用科技手段进行链接与创造的，与现实世界映射与交互的虚拟世界，具备新型社会体系的数字生活空间。 它整合了多种新技术而产生的新型虚实相融的互联网应用和社会形态，它基于扩展现实技术提供沉浸式体验，基于数字孪生技术生成现实世界的镜像，基于区块链技术搭建经济体系，将虚拟世界与现实世界在经济系统、社交系统、身份系统上密切融合，并且允许每个用户进行内容生产和世界编辑。 元宇宙一词诞生于1992年的科幻小说《雪崩》，小说描绘了一个庞大的虚拟现实世界，在这里，人们用数字化身来控制，并相互竞争以提高自己的地位，到现在看来，描述的还是超前的未来世界】 关于“元宇宙”，比较认可的思想源头是美国数学家和计算机专家弗诺·文奇教授，在其1981年出版的小说《真名实姓》中，创造性地构思了一个通过脑机接口进入并获得感官体验的虚拟世界。 元宇宙本质上是对现实世界的虚拟化、数字化过程，需要对内容生产、经济系统、用户体验以及实体世界内容等进行大量改造。但元宇宙的发展是循序渐进的，是在共享的基础设施、标准及协议的支撑下，由众多工具、平台不断融合、进化而最终成形。 2021年12月，入选《柯林斯词典》2021年度热词 ；12月6日，入选“2021年度十大网络用语”。12月8日，入选《咬文嚼字》“2021年度十大流行语”。 来源于 百度 观点 我有两个观点 一· 我比较期待类似虚拟世界的，如脑机接口，VR，可以有很多造福人类的地方，如 让死人复活，让植物人苏醒等 二· 不太赞同，你进入虚拟世界，你的想法，记忆都会被读取，甚至是被篡改，毫无隐私，也无法管理 以上是我的观点，如果你有神马观点，欢迎留言！ 记得分享，收藏，最好有个打赏！✊","categories":[{"name":"话题","slug":"话题","permalink":"https://www.yt-blog.top/categories/%E8%AF%9D%E9%A2%98/"}],"tags":[{"name":"话题","slug":"话题","permalink":"https://www.yt-blog.top/tags/%E8%AF%9D%E9%A2%98/"},{"name":"元宇宙","slug":"元宇宙","permalink":"https://www.yt-blog.top/tags/%E5%85%83%E5%AE%87%E5%AE%99/"},{"name":"观点","slug":"观点","permalink":"https://www.yt-blog.top/tags/%E8%A7%82%E7%82%B9/"}],"author":"懵懂的初一少年"},{"title":"自建下载库","slug":"自建下载库","date":"2021-11-14T12:12:00.000Z","updated":"2023-03-12T13:23:33.000Z","comments":true,"path":"20211114/1212/自建下载库/","link":"","permalink":"https://www.yt-blog.top/20211114/1212/%E8%87%AA%E5%BB%BA%E4%B8%8B%E8%BD%BD%E5%BA%93/","excerpt":"","text":"说说啥是自建下载 就是自己有下载库 为啥要自建下载库 Github在中国访问慢，下载不方便 好处 ·方便 ·下载快 ·支持文件夹 文档 新建项目，绑二级域名一定是download（要符合协议，保证文件共享顺畅）， 下载项目： 下载python: 提示 只支持win，mac不支持 开发不易请打赏 如果你使用了请在评论发‘我用了’，我会后期维护的","categories":[{"name":"技术","slug":"技术","permalink":"https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.yt-blog.top/tags/python/"},{"name":"博客","slug":"博客","permalink":"https://www.yt-blog.top/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"自学","slug":"自学","permalink":"https://www.yt-blog.top/tags/%E8%87%AA%E5%AD%A6/"},{"name":"自建下载","slug":"自建下载","permalink":"https://www.yt-blog.top/tags/%E8%87%AA%E5%BB%BA%E4%B8%8B%E8%BD%BD/"}],"author":"动荡的初二少年"},{"title":"我做了个音效包","slug":"我做了个音效包","date":"2021-11-11T16:12:00.000Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"20211111/1612/我做了个音效包/","link":"","permalink":"https://www.yt-blog.top/20211111/1612/%E6%88%91%E5%81%9A%E4%BA%86%E4%B8%AA%E9%9F%B3%E6%95%88%E5%8C%85/","excerpt":"","text":"我下午闲着没事就做了个音效包，大家去体验一下吧！ 打开qq音乐 音效&gt;音效制作&gt;导入 导入里面的qmaep文件 下载（沉浸音效）","categories":[{"name":"技术","slug":"技术","permalink":"https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"QQ音乐","slug":"QQ音乐","permalink":"https://www.yt-blog.top/tags/QQ%E9%9F%B3%E4%B9%90/"}],"author":"懵懂的初一少年"},{"title":"hexo安装","slug":"hexo安装","date":"2021-11-08T08:34:00.000Z","updated":"2023-02-19T00:16:00.000Z","comments":true,"path":"20211108/0834/hexo安装/","link":"","permalink":"https://www.yt-blog.top/20211108/0834/hexo%E5%AE%89%E8%A3%85/","excerpt":"","text":"首先配置环境, node.js: git: git 安装好后 访问 用github登录，没有的一定要注册：https://github.com/ 然后访问： 点蓝色 创建团都时点，spik 过一会 出现烟花代表成功 接着下载github桌面版，登录账户","categories":[{"name":"技术","slug":"技术","permalink":"https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.yt-blog.top/tags/hexo/"}],"author":"懵懂的初一少年"},{"title":"练笔","slug":"练笔","date":"2021-11-03T23:15:05.000Z","updated":"2023-06-22T09:37:58.477Z","comments":true,"path":"20211103/2315/练笔/","link":"","permalink":"https://www.yt-blog.top/20211103/2315/%E7%BB%83%E7%AC%94/","excerpt":"","text":"老师批评的声音惊天动地，叽里呱啦，让人不得不紧张到手心出汗，那话语如同子弹一般，劈天盖地射向我们，班里有了些火药味。眼前好像有一只母老虎，咆哮个不停，我们只能默默地听着。 2. 老师关切的声音如阳光温暖，轻轻地抚摸着我，让我的心舒服了许多，心中的阴霾也被这个声音吹散，像极了春风，把云吹过，把太阳吹回来，让大地充满生机，我的心情逐渐好转！","categories":[{"name":"练笔","slug":"练笔","permalink":"https://www.yt-blog.top/categories/%E7%BB%83%E7%AC%94/"}],"tags":[{"name":"作文","slug":"作文","permalink":"https://www.yt-blog.top/tags/%E4%BD%9C%E6%96%87/"}],"author":"懵懂的初一少年"},{"title":"国庆","slug":"国庆","date":"2021-10-12T09:39:00.000Z","updated":"2023-02-19T00:16:55.000Z","comments":true,"path":"20211012/0939/国庆/","link":"","permalink":"https://www.yt-blog.top/20211012/0939/%E5%9B%BD%E5%BA%86/","excerpt":"国庆就到了，小区的院子里插满了国旗。虽然大家都呆在家，但爱国的心依旧在;虽然国庆不能出去玩，但我还是有很多有趣的经历！","text":"国庆就到了，小区的院子里插满了国旗。虽然大家都呆在家，但爱国的心依旧在;虽然国庆不能出去玩，但我还是有很多有趣的经历！ 前几天，我在家里看到微信朋友圈上很多人的头像上都放了一个小国旗，大家都很重视国庆，在每个中国人的心里国庆是最重要的！ 最后一天，下午我来到了中央大街，街边的灯杠上挂着国旗，到处弥漫着国庆的气氛。中央大街上播放着《我和我的祖国》，声音不大，但却包含着对祖国的爱。其中我最喜欢的一句是”我和我的祖国，一刻也不能分割”每个中国人都是中国的一部分，不能缺少！中国的的领土，绝不能割裂！72年前毛主席站在天安门城楼上宣布：“中华人民共和国中央人民政府今天成立了！”七十二年前我们的飞机飞两次，而现在我们的飞机再也不用飞两次了！我们的中国强大了，我们再也不用遭受过去的耻辱，因为中国崛起了，从过去吃不饱睡不好，到现在的全面小康，中国发生了翻天覆地的变化，中国富强了! 我骄傲我是中国人，我爱中国，我祝祖国母亲繁荣昌盛！ 本文是我写的学校作文","categories":[{"name":"国庆","slug":"国庆","permalink":"https://www.yt-blog.top/categories/%E5%9B%BD%E5%BA%86/"}],"tags":[{"name":"周记","slug":"周记","permalink":"https://www.yt-blog.top/tags/%E5%91%A8%E8%AE%B0/"}],"author":"懵懂的初一少年"}],"categories":[{"name":"技术","slug":"技术","permalink":"https://www.yt-blog.top/categories/%E6%8A%80%E6%9C%AF/"},{"name":"应用推荐","slug":"应用推荐","permalink":"https://www.yt-blog.top/categories/%E5%BA%94%E7%94%A8%E6%8E%A8%E8%8D%90/"},{"name":"网课生活","slug":"网课生活","permalink":"https://www.yt-blog.top/categories/%E7%BD%91%E8%AF%BE%E7%94%9F%E6%B4%BB/"},{"name":"Win11","slug":"Win11","permalink":"https://www.yt-blog.top/categories/Win11/"},{"name":"话题","slug":"话题","permalink":"https://www.yt-blog.top/categories/%E8%AF%9D%E9%A2%98/"},{"name":"练笔","slug":"练笔","permalink":"https://www.yt-blog.top/categories/%E7%BB%83%E7%AC%94/"},{"name":"国庆","slug":"国庆","permalink":"https://www.yt-blog.top/categories/%E5%9B%BD%E5%BA%86/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.yt-blog.top/tags/python/"},{"name":"cdn","slug":"cdn","permalink":"https://www.yt-blog.top/tags/cdn/"},{"name":"次回加载","slug":"次回加载","permalink":"https://www.yt-blog.top/tags/%E6%AC%A1%E5%9B%9E%E5%8A%A0%E8%BD%BD/"},{"name":"Lazyload","slug":"Lazyload","permalink":"https://www.yt-blog.top/tags/Lazyload/"},{"name":"Cache","slug":"Cache","permalink":"https://www.yt-blog.top/tags/Cache/"},{"name":"自主缓存","slug":"自主缓存","permalink":"https://www.yt-blog.top/tags/%E8%87%AA%E4%B8%BB%E7%BC%93%E5%AD%98/"},{"name":"网站加速","slug":"网站加速","permalink":"https://www.yt-blog.top/tags/%E7%BD%91%E7%AB%99%E5%8A%A0%E9%80%9F/"},{"name":"AI","slug":"AI","permalink":"https://www.yt-blog.top/tags/AI/"},{"name":"New Bing","slug":"New-Bing","permalink":"https://www.yt-blog.top/tags/New-Bing/"},{"name":"ChatGPT","slug":"ChatGPT","permalink":"https://www.yt-blog.top/tags/ChatGPT/"},{"name":"OpenAI","slug":"OpenAI","permalink":"https://www.yt-blog.top/tags/OpenAI/"},{"name":"Node.js","slug":"Node-js","permalink":"https://www.yt-blog.top/tags/Node-js/"},{"name":"simplest-server","slug":"simplest-server","permalink":"https://www.yt-blog.top/tags/simplest-server/"},{"name":"话题","slug":"话题","permalink":"https://www.yt-blog.top/tags/%E8%AF%9D%E9%A2%98/"},{"name":"应用推荐","slug":"应用推荐","permalink":"https://www.yt-blog.top/tags/%E5%BA%94%E7%94%A8%E6%8E%A8%E8%8D%90/"},{"name":"2022","slug":"2022","permalink":"https://www.yt-blog.top/tags/2022/"},{"name":"js","slug":"js","permalink":"https://www.yt-blog.top/tags/js/"},{"name":"tool.js","slug":"tool-js","permalink":"https://www.yt-blog.top/tags/tool-js/"},{"name":"网课","slug":"网课","permalink":"https://www.yt-blog.top/tags/%E7%BD%91%E8%AF%BE/"},{"name":"虚拟","slug":"虚拟","permalink":"https://www.yt-blog.top/tags/%E8%99%9A%E6%8B%9F/"},{"name":"OBS","slug":"OBS","permalink":"https://www.yt-blog.top/tags/OBS/"},{"name":"Win11","slug":"Win11","permalink":"https://www.yt-blog.top/tags/Win11/"},{"name":"安卓11","slug":"安卓11","permalink":"https://www.yt-blog.top/tags/%E5%AE%89%E5%8D%9311/"},{"name":"其他","slug":"其他","permalink":"https://www.yt-blog.top/tags/%E5%85%B6%E4%BB%96/"},{"name":"元宇宙","slug":"元宇宙","permalink":"https://www.yt-blog.top/tags/%E5%85%83%E5%AE%87%E5%AE%99/"},{"name":"观点","slug":"观点","permalink":"https://www.yt-blog.top/tags/%E8%A7%82%E7%82%B9/"},{"name":"博客","slug":"博客","permalink":"https://www.yt-blog.top/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"自学","slug":"自学","permalink":"https://www.yt-blog.top/tags/%E8%87%AA%E5%AD%A6/"},{"name":"自建下载","slug":"自建下载","permalink":"https://www.yt-blog.top/tags/%E8%87%AA%E5%BB%BA%E4%B8%8B%E8%BD%BD/"},{"name":"QQ音乐","slug":"QQ音乐","permalink":"https://www.yt-blog.top/tags/QQ%E9%9F%B3%E4%B9%90/"},{"name":"hexo","slug":"hexo","permalink":"https://www.yt-blog.top/tags/hexo/"},{"name":"作文","slug":"作文","permalink":"https://www.yt-blog.top/tags/%E4%BD%9C%E6%96%87/"},{"name":"周记","slug":"周记","permalink":"https://www.yt-blog.top/tags/%E5%91%A8%E8%AE%B0/"}]}