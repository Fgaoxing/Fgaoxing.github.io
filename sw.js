var CACHE_NAME="MyCache";let cachelist=["/404.html","/NoNetwork/"],not_network="/NoNetwork/",My_Domain="www.yt-blog.top",out_url=[],debug=!0,myconsole={success:e=>{console.log(`%c${e}`,"border-left: 5px solid green;box-shadow: 0 0 32px 0 #79797951;text-decoration: none;border-radius: 3px;color:white !important;background:black;padding: 3px;")},warning:e=>{console.log(`%c${e}`,"border-left: 5px solid yellow;box-shadow: 0 0 32px 0 #79797951;text-decoration: none;border-radius: 3px;color:white !important;background:black;padding: 3px;")},info:e=>{console.log(`%c${e}`,"border-left: 5px solid dodgerblue;box-shadow: 0 0 32px 0 #79797951;text-decoration: none;border-radius: 3px;color:white !important;background:black;padding: 3px;")},error:e=>{console.log(`%c${e}`,"border-left: 5px solid red;box-shadow: 0 0 32px 0 #79797951;text-decoration: none;border-radius: 3px;color:white !important;background:black;padding: 3px;")},debug:e=>{console.log(`%c${e}`,"border-left: 5px solid gray;box-shadow: 0 0 32px 0 #79797951;text-decoration: none;border-radius: 3px;color:white !important;background:black;padding: 3px;")}},cdn={myblog:{mian:{url:"https://www.yt-blog.top"},vercel:{url:"https://vercel.yt-blog.top"},vercelcn:{url:"https://vercel-china.yt-blog.top"},github:{url:"https://github.yt-blog.top"},cfpage:{url:"https://cfpage.yt-blog.top"},cfpage2:{url:"https://fgaoxing-github-io.pages.dev"},netlify:{url:"https://netlify.yt-blog.top"},gcore:{url:"https://gcore.yt-blog.top"}}};self.db={read:(e,t)=>(t||(t={type:"text"}),new Promise(((t,n)=>{caches.open(CACHE_NAME).then((n=>{n.match(new Request(`https://LOCALCACHE/${encodeURIComponent(e)}`)).then((function(e){e||t(null),e.text().then((e=>t(e)))})).catch((()=>{t(null)}))}))}))),write:(e,t)=>new Promise(((n,o)=>{caches.open(CACHE_NAME).then((function(o){o.put(new Request(`https://LOCALCACHE/${encodeURIComponent(e)}`),new Response(t)),n()})).catch((()=>{o()}))}))},self.addEventListener("install",(function(e){self.skipWaiting(),e.waitUntil(caches.open(CACHE_NAME).then((function(e){db.read("uuid").then((function(t){return t||(myconsole.info("SW初始化"),db.write("uuid","xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){var t=16*Math.random()|0;return("x"==e?t:3&t|8).toString(16)})))),myconsole.info("SW开始"),e.addAll(cachelist)}))})))}));const lfetch=function(e,t){let n=new AbortController;const o=function(e){return new Promise(((t,n)=>{e.arrayBuffer().then((function(n){t(new Response(n,{status:e.status,headers:e.headers}))})).catch((function(e){n(e)}))}))};return Promise.any||(Promise.any=function(e){return new Promise(((t,n)=>{let o=(e=Array.isArray(e)?e:[]).length,r=[];if(0===o)return n(new AggregateError("All promises were rejected"));e.forEach((e=>{e.then((e=>{t(e)}),(e=>{o--,r.push(e),0===o&&n(new AggregateError(r))}))}))}))}),Promise.any(e.map((e=>new Promise(((t,r)=>{fetch(e,{signal:n.signal,mode:-1!==e.indexOf("https://netlify.yt-blog.top")?"no-cors":"cors"}).then(o).then((e=>{200==e.status?(n.abort(),t(e)):r(e)})).catch((function(e){"AbortError: The user aborted a request."!==e.toString()&&(myconsole.error("无法请求"+e.toString()),r(e))}))}))))).catch((function(t){return new Promise((function(r,c){"Uncaught (in promise) AggregateError: All promises were rejected"===t.toString()&&fetch(e,{signal:n.signal}).then(o).then((e=>{r(e)})).catch((function(e){"AbortError: The user aborted a request."!==e.toString()&&c(e)}))}))}))},handleerr=function(e,t){return e.url.split("/")[2]===My_Domain||-1!==e.url.split("/")[2].indexOf("localhost")?caches.match(e).then((function(e){return myconsole.warning("当前域名下的页面请求失败，推测可能是无法与服务器通信，读取缓存"),e||caches.match(new Request(not_network))})):new Response(`<p>资源发生错误</p>\n    <p>${t}</p>`,{headers:{"content-type":"text/html; charset=utf-8"}})},handle=async function(e){const t=e.url;let n=new URL(t);const o=n.href.substr(n.origin.length),r=t.split("/")[2];if(o.match(/\/sw\.js/g))return fetch(e);for(let e in cdn){if(t in out_url){myconsole.info(t+" 被禁止加速");break}for(let n in cdn[e])if(r==(cdn[e][n].url.indexOf("https://")<0?cdn[e][n].url.split("http://")[1].split("/")[0]:cdn[e][n].url.split("https://")[1].split("/")[0])&&t.match(cdn[e][n].url)){let o=[];for(let r in cdn[e])o.push(t.replace(cdn[e][n].url,cdn[e][r].url));return lfetch(o).then((function(e){return e}))}}return myconsole.warning(e.url+" 没有加速"),fetch(e).then((function(t){if(!t)throw"error";return caches.open(CACHE_NAME).then((function(n){return"http"!==e.url.split(":")[0]&&"https"!==e.url.split(":")[0]||(n.delete(e).catch((function(e){})),n.put(e,t.clone()).catch((function(e){}))),t})).catch((function(e){}))})).catch((function(t){return myconsole.error(e.url+" 请求失败"),r===My_Domain||-1!==r.indexOf("localhost")?caches.match(e).then((function(e){return myconsole.warning("当前域名下的页面请求失败，推测可能是无法与服务器通信，读取缓存"),e||caches.match(new Request(not_network))})):new Response(`<h1>资源发生错误</h1>\n    <b>${t}</b>`,{headers:{"content-type":"text/html; charset=utf-8"}})}))};self.addEventListener("fetch",(async e=>{try{e.respondWith(handle(e.request)),myconsole.success(e.request.url+" 请求成功")}catch(t){e.respondWith(handleerr(e.request,t))}})),self.addEventListener("activate",(async function(e){self.clients.claim()}));
//# sourceMappingURL=maps/sw.js.map
